<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="https://www.pysio.online/rss.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://www.pysio.online/rss.xml" rel="self" type="application/rss+xml"/>
    <title>Pysio&amp;apos;s Home</title>
    <link>https://www.pysio.online/</link>
    <description>一个温暖的家</description>
    <language>zh-CN</language>
    <pubDate>Mon, 10 Mar 2025 18:35:12 GMT</pubDate>
    <lastBuildDate>Mon, 10 Mar 2025 18:35:12 GMT</lastBuildDate>
    <generator>@vuepress/plugin-feed</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <category>daily</category>
    <category>resource</category>
    <category>develop</category>
    <category>NekoXii</category>
    <item>
      <title>记一次AnyCast+博客搭建</title>
      <link>https://www.pysio.online/posts/daily/AnyCast.html</link>
      <guid>https://www.pysio.online/posts/daily/AnyCast.html</guid>
      <source url="https://www.pysio.online/rss.xml">记一次AnyCast+博客搭建</source>
      <description>因为闲着没事干, 就打算搭建一个Anycast 然后把博客和DNS都放上去, 本文暂且记录一下Anycast+博客的搭建过程。 Anycast 是什么? Anycast 是一种网络寻址和路由方法, 可以将传入请求路由到各种不同的位置或&amp;quot;节点&amp;quot;。在 CDN 的上下文中, Anycast 通常会将传入的流量路由到距离最近并且能够有效处理请求的数据中心。选择...</description>
      <category>daily</category>
      <pubDate>Sat, 15 Feb 2025 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>因为闲着没事干, 就打算搭建一个Anycast 然后把博客和DNS都放上去, 本文暂且记录一下Anycast+博客的搭建过程。</p>
<h2>Anycast 是什么?</h2>
<blockquote>
<p>Anycast 是一种网络寻址和路由方法, 可以将传入请求路由到各种不同的位置或"节点"。在 CDN 的上下文中, Anycast 通常会将传入的流量路由到距离最近并且能够有效处理请求的数据中心。选择性路由使 Anycast 网络能够应对高流量、网络拥塞和 DDoS 攻击。[^1]</p>
</blockquote>
<h2>前提条件</h2>
<ul>
<li>一个ASN</li>
<li>一个IPv4/6地址段</li>
<li>多台可BGP Session的服务器 (如果可以 使用多个上游)</li>
<li>一个聪明的头脑</li>
<li><s>当然 还有一杯咖啡</s></li>
</ul>
<h2>1. 寻找一个上游</h2>
<p>各大运营商常在托管机房有接入点, 你可以购买机房的托管服务, 然后就应该可以直接联系运营商签约购买带宽及 IP transit 服务。 但是介于国内特色, 这一套下来你只会收到天价的账单 <s>（当然如果你不差钱就当我没说）</s></p>
<p>但是好消息是, 有很多的VPS商家提供BGP Session服务, 例如Vultr BuyVM等等, 你可以选择其中一个作为你的上游。 这些提供商每月价格大约在5-10美元之间, 性价比还算的过去。</p>
<p>你也可以在这里 <a href="https://bgp.services/" target="_blank" rel="noopener noreferrer">BGP Services</a> 寻找更多的提供商</p>
<h2>2. 宣告地址</h2>
<p>在开始这个步骤之前, 你应该按照商家的要求, 验证你的ASN和IP地址段。大部分商家都是开一个工单 本文已Vultr/BuyVM为例。</p>
<h3>获取链接信息</h3>
<h4>Vultr</h4>
<p><s>应为配置的时候忘记截图了 Vultr的ASN/IP段注册部分简短带过QWQ</s></p>
<p>直接打开如下地址 <a href="https://my.vultr.com/bgp/" target="_blank" rel="noopener noreferrer">Vultr BGP</a> 填写你的ASN和IP地址段, Vultr会给你的Whois邮箱发送一封验证码邮件, 验证之后等待Vultr的工作人员审核（注意回复工单）。</p>
<p>在申请通过之后, 打开VPS的详情, 点击 <code>BGP</code> 选项卡 就可以得到如下信息:</p>
<figure><img src="https://files.pysio.online/Images/20250216154622.png" alt="Vultr BGP" tabindex="0" loading="lazy"><figcaption>Vultr BGP</figcaption></figure>
<p>至此 你就得到了和Vultr进行BGP Session的信息。</p>
<h4>BuyVM</h4>
<p>登录<a href="https://manage.buyvm.net/" target="_blank" rel="noopener noreferrer">BuyVM管理后台</a> 选择你的机器 点击 <code>Networking</code> -&gt; <code>BGP</code> 在提交工单之后, 等待审核通过。就可以得到如下信息:</p>
<figure><img src="https://files.pysio.online/Images/20250217081432.png" alt="BuyVM BGP" tabindex="0" loading="lazy"><figcaption>BuyVM BGP</figcaption></figure>
<p>至此 你就得到了和BuyVM进行BGP Session的信息。</p>
<h3>配置Bird2</h3>
<p>我使用 <code>Debian 12</code> 作为示例, 直接使用APT安装Bird2 <code>apt install bird2</code></p>
<p>我的ASN为 <code>AS213605</code> 我想宣告 <code>2a14:67c1:a020::/48</code></p>
<p>以Vultr为例, 他给出的对端ASN是 <code>64515</code> 对端IP是 <code>2001:19f0:ffff::1</code> 我们的 vps 本身的 IPv6 地址为 <code>2001:19f0:5001:225f:5400:05ff:fe69:6776</code>, MD5 密码为 114514, 所以我的配置文件如下:</p>
<div class="language-conf" data-highlighter="prismjs" data-ext="conf"><pre><code><span class="line">log syslog all;</span>
<span class="line"></span>
<span class="line">router id 114.514.111.222; # vps 的公网 IPv4 地址</span>
<span class="line">define ASN=213605; # 你的 ASN</span>
<span class="line">define OWNIPv6s=[2a14:67c1:a020::/48]; # 你的 IPv6 地址段</span>
<span class="line"></span>
<span class="line"># device 协议必须有, 否则 BIRD 不会自动从内核获取比如网络接口的信息, direct 协议和寻找下一跳的时候就挂了</span>
<span class="line">protocol device {}</span>
<span class="line"></span>
<span class="line"># kernel 协议用于导出路由表到内核</span>
<span class="line">protocol kernel {</span>
<span class="line">    ipv6 {</span>
<span class="line">        export all; # 将所有 IPv6 路由都导入系统路由表</span>
<span class="line">    };</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line"># static 定义静态路由</span>
<span class="line">protocol static static_v6 {</span>
<span class="line">    ipv6;</span>
<span class="line">    route 2a14:67c1:a020::/48 via 2001:19f0:5001:225f:5400:05ff:fe69:6776;  # 宣告 2a14:7c0:4d00::/40 这段 IP, 同时修改via后的ipv为你vps的ipv6</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line">filter export_filter_v6 {</span>
<span class="line">    if net ~ OWNIPv6s then accept; # 如果前缀包括在OWNIPv6s内则放出</span>
<span class="line">    reject; # 否则全部拒绝</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line">filter import_filter_v6 {</span>
<span class="line">    if net ~ [::/0] then reject; # 如果为默认路由则拒绝</span>
<span class="line">    accept; # 接收所有其他路由</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line">protocol bgp vultr {</span>
<span class="line">    local as ASN; # 指定本端ASN</span>
<span class="line">    source address 2001:19f0:5001:225f:5400:05ff:fe49:6493; # 指定本端地址</span>
<span class="line">    multihop 2; # 设置多跳 Vultr提供的值为2</span>
<span class="line">    neighbor 2001:19f0:ffff::1 as 64515; # 指定对端地址与ASN</span>
<span class="line">    ipv6 { # 指定要在该BGP邻居上跑的协议</span>
<span class="line">        import filter import_filter_v6; # 指定导入过滤器</span>
<span class="line">        export filter export_filter_v6; # 指定导出过滤器</span>
<span class="line">        export limit 10; # 限制导出前缀数量, 根据需要调整, 防止过滤器配糊导致 session 爆炸</span>
<span class="line">    };</span>
<span class="line">    password "114514"; # 如果没有 password 删除这行即可</span>
<span class="line">    graceful restart; # 平滑重启, 防止重启bird的时候造成路由撤回导致服务中断</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
</div><p>你可以直接按着我的配置文件修改(建议先去看看soha的教程 然后自己手写[^2]), 改好后写入 <code>/etc/bird/bird.conf</code>, 然后应用配置文件 <code>bridc c</code></p>
<p>你可以运行 <code>birdc show protocols all</code> 查看当前所有协议的状态:</p>
<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">vultr    BGP        </span></code></pre>
</div>]]></content:encoded>
      <enclosure url="https://files.pysio.online/Images/20250216154622.png" type="image/png"/>
    </item>
    <item>
      <title>2025 2月报告</title>
      <link>https://www.pysio.online/posts/daily/day250215.html</link>
      <guid>https://www.pysio.online/posts/daily/day250215.html</guid>
      <source url="https://www.pysio.online/rss.xml">2025 2月报告</source>
      <description>好久没有水文章了 水一篇来记录记录自己干了什么 ;P AnyCast网络 在上个月初。我去申请了一个 ASN ， 在拿到一个 /44 的IPv6地址段后，就开始琢磨琢磨玩玩BGP啥的 最后搭建了一个Anycast 玩 (大陆访问速度及其感人) 截至2025年2月15日，Anycast共有6个节点 Anycast服务器探针Anycast服务器探针 目前博...</description>
      <category>daily</category>
      <pubDate>Sat, 15 Feb 2025 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>好久没有水文章了 水一篇来记录记录自己干了什么 ;P</p>
<h2>AnyCast网络</h2>
<p>在上个月初。我去申请了一个 ASN ， 在拿到一个 /44 的IPv6地址段后，就开始琢磨琢磨玩玩BGP啥的 最后搭建了一个Anycast 玩 (大陆访问速度及其感人)</p>
<p>截至2025年2月15日，Anycast共有6个节点</p>
<figure><img src="https://files.pysio.online/Images/20250215075819.png" alt="Anycast服务器探针" tabindex="0" loading="lazy"><figcaption>Anycast服务器探针</figcaption></figure>
<p>目前博客也是通过这个网络分发的 <s>(但是实际上中国大陆访问有一层腾讯云CDN)</s></p>
<p>同时 为了区分访问的时候是哪个服务器返回的 添加了一个弹窗和一个页脚 这样就可以区分是从哪个节点获得的返回值 <s>也可以看看你被扔到什么奇怪地方去了</s></p>
<figure><img src="https://files.pysio.online/Images/20250215080711.png" alt="Anycast弹窗" tabindex="0" loading="lazy"><figcaption>Anycast弹窗</figcaption></figure>
<figure><img src="https://files.pysio.online/Images/20250215080736.png" alt="页脚的节点信息" tabindex="0" loading="lazy"><figcaption>页脚的节点信息</figcaption></figure>
<h2>文件分发重构</h2>
<p>之前一直是采用盐木的93@Home 作为文件分发的服务器，但是由于一些离谱的问题和302部分客户端不接受的问题，最后还是自己写了个文件分发服务存储吧文件放在Minio上。。。</p>
<h2>博客 API 重构</h2>
<p>uhhh 之前的API一直使用TypeScript + Nodejs， 但是因为小鸡性能原因和多线程扯淡，最后还是换成了GO =- = 也是没有办法的事情了QWQ</p>
<h2>评论系统换新</h2>
<p>之前的评论系统一直基于Github 同时也没有访问量统计，索性直接换成了Waline 但是删除了其中的反应部分（觉得实在有点难看了）</p>
<figure><img src="https://files.pysio.online/Images/20250215080441.png" alt="Waline评论系统" tabindex="0" loading="lazy"><figcaption>Waline评论系统</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://files.pysio.online/Images/20250215075819.png" type="image/png"/>
    </item>
    <item>
      <title>命运2 鼠标宏</title>
      <link>https://www.pysio.online/posts/daily/Dstiny2Macro.html</link>
      <guid>https://www.pysio.online/posts/daily/Dstiny2Macro.html</guid>
      <source url="https://www.pysio.online/rss.xml">命运2 鼠标宏</source>
      <description>提示 这里存放了一些常用的鼠标宏，实在不想手搓了QWQ 冰猎平地超级跳</description>
      <category>daily</category>
      <pubDate>Mon, 27 Jan 2025 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>这里存放了一些常用的鼠标宏，实在不想手搓了QWQ</p>
</div>
<h2>冰猎平地超级跳</h2>
]]></content:encoded>
    </item>
    <item>
      <title>资源分享: 关于我转生变成史莱姆这档事小说</title>
      <link>https://www.pysio.online/posts/resource/ThatTimeIGotReincarnatedasaSlime.html</link>
      <guid>https://www.pysio.online/posts/resource/ThatTimeIGotReincarnatedasaSlime.html</guid>
      <source url="https://www.pysio.online/rss.xml">资源分享: 关于我转生变成史莱姆这档事小说</source>
      <description>《关于我转生变成史莱姆这档事》，通常简称为《转生史莱姆》，是日本小说家伏濑创作的一部网络小说作品，描述一名上班族转生到异世界成为史莱姆的新人生故事。 资源包括 0 - 20 正片 2本外传</description>
      <category>resource</category>
      <pubDate>Sun, 05 Jan 2025 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>《关于我转生变成史莱姆这档事》，通常简称为《转生史莱姆》，是日本小说家伏濑创作的一部网络小说作品，描述一名上班族转生到异世界成为史莱姆的新人生故事。</p>
<p>资源包括 0 - 20 正片 2本外传</p>
<!-- more -->
<p>包含以下文件内容:</p>
<div class="language-list" data-highlighter="prismjs" data-ext="list"><pre><code><span class="line">📄 关于我转生成为史莱姆的那件事 01卷 - 伏瀨.jpg  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 01卷 - 伏瀨.mobi  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 02卷 - 伏瀨.jpg  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 02卷 - 伏瀨.mobi  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 03卷 - 伏瀨.jpg  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 03卷 - 伏瀨.mobi  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 04卷 - 伏濑.jpg  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 04卷 - 伏濑.mobi  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 05卷 - 伏濑.jpg  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 05卷 - 伏濑.mobi  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 06卷 - 伏濑.jpg  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 06卷 - 伏濑.mobi  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 07卷 - 伏濑.jpg  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 07卷 - 伏濑.mobi  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 08卷 - 伏瀨.jpg  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 08卷 - 伏瀨.mobi  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 09卷 - 伏瀨.jpg  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 09卷 - 伏瀨.mobi  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 10卷 - 伏瀨.jpg  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 10卷 - 伏瀨.mobi  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 11卷 - 伏瀨.jpg  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 11卷 - 伏瀨.mobi  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 12卷 - 伏瀨.jpg  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 12卷 - 伏瀨.mobi  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 13.5卷 短篇 - 伏濑.jpg  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 13.5卷 短篇 - 伏濑.mobi  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 13卷 - 伏瀨.jpg  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 13卷 - 伏瀨.mobi  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 14卷 - 伏瀨.jpg  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 14卷 - 伏瀨.mobi  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 15卷 - 伏瀨.jpg  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 15卷 - 伏瀨.mobi  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 16卷 - 伏瀨.jpg  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 16卷 - 伏瀨.mobi  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 17卷 - 伏瀨.jpg  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 17卷 - 伏瀨.mobi  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 18卷 - 伏瀨.jpg  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 18卷 - 伏瀨.mobi  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 19卷 - 伏瀨.jpg  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 19卷 - 伏瀨.mobi  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 20卷 - 伏瀨.jpg  </span>
<span class="line">📄 关于我转生成为史莱姆的那件事 20卷 - 伏瀨.mobi  </span>
<span class="line">📄 维鲁多拉的史莱姆观察日记 - 伏瀨.jpg  </span>
<span class="line">📄 维鲁多拉的史莱姆观察日记 - 伏瀨.mobi  </span>
<span class="line">📄 關於我轉生成為史萊姆短篇外傳合集 - 伏瀨.jpg  </span>
<span class="line">📄 關於我轉生成為史萊姆短篇外傳合集 - 伏瀨.mobi  </span>
<span class="line"></span></code></pre>
</div><p>下载地址： <a href="https://pysio-blog-files-list.akaere.online/%E5%85%B3%E4%BA%8E%E6%88%91%E8%BD%AC%E7%94%9F%E6%88%90%E4%B8%BA%E5%8F%B2%E8%8E%B1%E5%A7%86%E7%9A%84%E9%82%A3%E4%BB%B6%E4%BA%8B/" target="_blank" rel="noopener noreferrer">点我下载(Cloudflare)</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>新博客开坑！</title>
      <link>https://www.pysio.online/posts/develop/NewBlog.html</link>
      <guid>https://www.pysio.online/posts/develop/NewBlog.html</guid>
      <source url="https://www.pysio.online/rss.xml">新博客开坑！</source>
      <description>没错你没看错，我又闲得慌开始重构我的博客了（UWU） 目前是打算拿Next.js 写 先放一张超级无敌早期的网页 QWQ ( 早期网页早期网页</description>
      <category>develop</category>
      <pubDate>Sun, 05 Jan 2025 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>没错你没看错，我又闲得慌开始重构我的博客了（UWU）</p>
<p>目前是打算拿Next.js 写 先放一张超级无敌早期的网页 QWQ (</p>
<figure><img src="https://files.pysio.online/Images/73dc30f2d6ec844cda13e6aaa3ca03f2.png" alt="早期网页" tabindex="0" loading="lazy"><figcaption>早期网页</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://files.pysio.online/Images/73dc30f2d6ec844cda13e6aaa3ca03f2.png" type="image/png"/>
    </item>
    <item>
      <title>博客所有的API</title>
      <link>https://www.pysio.online/posts/develop/api.html</link>
      <guid>https://www.pysio.online/posts/develop/api.html</guid>
      <source url="https://www.pysio.online/rss.xml">博客所有的API</source>
      <description>通用说明 注 所有API均已部署至生产环境，请使用以下基础URL进行访问。 基础URL API集合 您也可以直接下载JSON文件：下载API集合 并导入 Postman 使用 重要 在进行API调用时，请注意以下事项： 所有请求都需要使用HTTPS协议 API可能会有速率限制 请妥善保管您的认证令牌 图片存储使用 Minio 对象存储，通过 CDN 加...</description>
      <category>develop</category>
      <pubDate>Wed, 01 Jan 2025 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2>通用说明</h2>
<div class="hint-container note">
<p class="hint-container-title">注</p>
<p>所有API均已部署至生产环境，请使用以下基础URL进行访问。</p>
</div>
<h3>基础URL</h3>
<div class="language-text" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">https://blogapi.pysio.online</span>
<span class="line"></span></code></pre>
</div><h3>API集合</h3>
<p>您也可以直接下载JSON文件：<a href="https://www.pysio.online/json/blog-api-collection.json" target="_blank" rel="noopener noreferrer">下载API集合</a> 并导入 Postman 使用</p>
<div class="hint-container important">
<p class="hint-container-title">重要</p>
<p>在进行API调用时，请注意以下事项：</p>
<ul>
<li>所有请求都需要使用HTTPS协议</li>
<li>API可能会有速率限制</li>
<li>请妥善保管您的认证令牌</li>
<li>图片存储使用 Minio 对象存储，通过 CDN 加速访问</li>
</ul>
</div>
<h3>通用响应格式</h3>
<p>所有JSON响应都遵循以下格式：</p>
<div class="language-json" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">"status"</span><span class="token operator">:</span> <span class="token string">"success/error"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"data/error"</span><span class="token operator">:</span> <span class="token string">"响应数据/错误信息"</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre>
</div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>调试API时，建议使用以下工具：</p>
<ul>
<li><a href="https://www.postman.com/" target="_blank" rel="noopener noreferrer">Postman</a></li>
<li><a href="https://insomnia.rest/" target="_blank" rel="noopener noreferrer">Insomnia</a></li>
<li><a href="https://curl.se/" target="_blank" rel="noopener noreferrer">curl</a></li>
</ul>
</div>
<h3>认证头格式</h3>
<div class="language-text" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">Authorization: Bearer {TOKEN}</span>
<span class="line"></span></code></pre>
</div><div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>请勿在客户端代码中直接存储管理员令牌。
确保在生产环境中使用安全的令牌存储方式。</p>
</div>
<h2>系统状态接口</h2>
<div class="hint-container note">
<p class="hint-container-title">注</p>
<p>系统状态接口可用于监控服务健康状况。</p>
</div>
<h3>1. 系统状态检查</h3>
<ul>
<li><strong>请求路径</strong>: <code>/</code></li>
<li><strong>请求方法</strong>: GET</li>
<li><strong>响应格式</strong>: text/plain</li>
<li><strong>响应示例</strong>: <code>你来这里干啥 喵?</code></li>
<li><strong>调试示例</strong>:<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">curl</span> https://blogapi.pysio.online/</span>
<span class="line"></span></code></pre>
</div></li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>建议使用此端点进行基础连通性测试。</p>
</div>
<h3>2. FastFetch 系统信息</h3>
<ul>
<li><strong>请求路径</strong>: <code>/fastfetch</code></li>
<li><strong>请求方法</strong>: GET</li>
<li><strong>响应格式</strong>: application/json</li>
<li><strong>响应示例</strong>:<div class="language-json" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">"status"</span><span class="token operator">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"output"</span><span class="token operator">:</span> <span class="token string">"系统信息HTML格式输出"</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre>
</div></li>
<li><strong>调试示例</strong>:<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">curl</span> https://blogapi.pysio.online/fastfetch</span>
<span class="line"></span></code></pre>
</div></li>
</ul>
<h3>3. 心跳检测</h3>
<ul>
<li><strong>请求路径</strong>: <code>/heartbeat</code></li>
<li><strong>请求方法</strong>: POST</li>
<li><strong>请求头</strong>:<div class="language-text" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">Authorization: Bearer {TOKEN}</span>
<span class="line"></span></code></pre>
</div></li>
<li><strong>请求参数</strong>:
<ul>
<li><code>application</code>: 应用名称</li>
<li><code>introduce</code>: 应用描述</li>
<li><code>rgba</code>: 颜色值</li>
<li><code>applicationOnline</code>: 应用状态</li>
</ul>
</li>
<li><strong>响应格式</strong>: application/json</li>
<li><strong>响应示例</strong>:<div class="language-json" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">"message"</span><span class="token operator">:</span> <span class="token string">"Heartbeat received"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"application"</span><span class="token operator">:</span> <span class="token string">"MyApp"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"introduce"</span><span class="token operator">:</span> <span class="token string">"My Application Description"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"rgba"</span><span class="token operator">:</span> <span class="token string">"233,30,99,0.17"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"applicationOnline"</span><span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre>
</div></li>
<li><strong>调试示例</strong>:<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token parameter variable">-X</span> POST <span class="token parameter variable">-H</span> <span class="token string">"Authorization: Bearer your_token"</span> https://blogapi.pysio.online/heartbeat</span>
<span class="line"></span></code></pre>
</div></li>
</ul>
<h3>4. 状态检查</h3>
<ul>
<li><strong>请求路径</strong>: <code>/check</code></li>
<li><strong>请求方法</strong>: GET</li>
<li><strong>响应格式</strong>: application/json</li>
<li><strong>响应示例</strong>:<div class="language-json" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">"alive"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"last_heartbeat"</span><span class="token operator">:</span> <span class="token number">1234567890</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"application"</span><span class="token operator">:</span> <span class="token string">"MyApp"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"introduce"</span><span class="token operator">:</span> <span class="token string">"My Application Description"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"rgba"</span><span class="token operator">:</span> <span class="token string">"233,30,99,0.17"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"applicationOnline"</span><span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre>
</div></li>
<li><strong>调试示例</strong>:<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">curl</span> https://blogapi.pysio.online/check</span>
<span class="line"></span></code></pre>
</div></li>
</ul>
<h2>图片管理接口</h2>
<div class="hint-container important">
<p class="hint-container-title">重要</p>
<p>所有图片都存储在 Minio 对象存储中，通过 CDN 加速访问。
上传的图片会自动转换为 WebP 格式以优化存储和传输。</p>
</div>
<h3>1. 获取随机图片</h3>
<ul>
<li><strong>请求路径</strong>: <code>/random_image</code></li>
<li><strong>请求方法</strong>: GET</li>
<li><strong>响应</strong>: 302 重定向到 Minio 存储的图片</li>
<li><strong>重定向格式</strong>: <code>https://minioapi.pysio.online/randomimg/{hash}.webp</code></li>
<li><strong>错误响应</strong>:<div class="language-json" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">"error"</span><span class="token operator">:</span> <span class="token string">"No images available"</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre>
</div></li>
<li><strong>调试示例</strong>:<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 使用 -L 参数跟随重定向</span></span>
<span class="line"><span class="token function">curl</span> <span class="token parameter variable">-L</span> https://blogapi.pysio.online/random_image <span class="token parameter variable">-o</span> random.webp</span>
<span class="line"></span></code></pre>
</div></li>
</ul>
<h3>2. 获取特定图片</h3>
<ul>
<li><strong>请求路径</strong>: <code>/images/:hash</code></li>
<li><strong>请求方法</strong>: GET</li>
<li><strong>参数说明</strong>:
<ul>
<li><code>hash</code>: 图片的哈希值</li>
</ul>
</li>
<li><strong>响应</strong>: 302 重定向到 Minio 存储的图片</li>
<li><strong>重定向格式</strong>: <code>https://minioapi.pysio.online/randomimg/{hash}.webp</code></li>
<li><strong>错误响应</strong>:<div class="language-json" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">"error"</span><span class="token operator">:</span> <span class="token string">"Image not found"</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre>
</div></li>
</ul>
<h3>3. 获取图片（优化版）</h3>
<ul>
<li><strong>请求路径</strong>: <code>/i/:hash</code></li>
<li><strong>请求方法</strong>: GET</li>
<li><strong>参数说明</strong>:
<ul>
<li><code>hash</code>: 图片的哈希值</li>
</ul>
</li>
<li><strong>响应</strong>: 302 重定向到 Minio 存储的图片</li>
<li><strong>重定向格式</strong>: <code>https://minioapi.pysio.online/randomimg/{hash}.webp</code></li>
<li><strong>错误响应</strong>:<div class="language-json" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">"error"</span><span class="token operator">:</span> <span class="token string">"Image not found"</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre>
</div></li>
</ul>
<h3>4. 上传图片</h3>
<ul>
<li><strong>请求路径</strong>: <code>/images/add</code></li>
<li><strong>请求方法</strong>: POST</li>
<li><strong>请求头</strong>:<div class="language-text" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">Authorization: Bearer {ADMIN_TOKEN}</span>
<span class="line">Content-Type: multipart/form-data</span>
<span class="line"></span></code></pre>
</div></li>
<li><strong>请求参数</strong>:
<ul>
<li><code>image</code>: 图片文件 (form-data)</li>
</ul>
</li>
<li><strong>响应格式</strong>: application/json</li>
<li><strong>成功响应</strong>:<div class="language-json" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">"hash"</span><span class="token operator">:</span> <span class="token string">"图片的hash值"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"size"</span><span class="token operator">:</span> 图片大小(字节)</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre>
</div></li>
<li><strong>错误响应</strong>:<div class="language-json" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">"error"</span><span class="token operator">:</span> <span class="token string">"Image file is required"</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre>
</div>或<div class="language-json" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">"error"</span><span class="token operator">:</span> <span class="token string">"Image already exists"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"hash"</span><span class="token operator">:</span> <span class="token string">"已存在图片的hash"</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre>
</div></li>
<li><strong>调试示例</strong>:<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token parameter variable">-X</span> POST <span class="token punctuation">\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">"Authorization: Bearer your_admin_token"</span> <span class="token punctuation">\</span></span>
<span class="line">  <span class="token parameter variable">-F</span> <span class="token string">"image=@/path/to/your/image.jpg"</span> <span class="token punctuation">\</span></span>
<span class="line">  https://blogapi.pysio.online/images/add</span>
<span class="line"></span></code></pre>
</div></li>
</ul>
<h3>5. 获取图片列表</h3>
<ul>
<li><strong>请求路径</strong>: <code>/images/list</code></li>
<li><strong>请求方法</strong>: GET</li>
<li><strong>查询参数</strong>:
<ul>
<li><code>page</code>: 页码 (默认: 1)</li>
<li><code>limit</code>: 每页数量 (默认: 10)</li>
</ul>
</li>
<li><strong>响应格式</strong>: application/json</li>
<li><strong>响应示例</strong>:<div class="language-json" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">"images"</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">"hash"</span><span class="token operator">:</span> <span class="token string">"图片hash"</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">"contentType"</span><span class="token operator">:</span> <span class="token string">"image/webp"</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">"createdAt"</span><span class="token operator">:</span> <span class="token string">"创建时间"</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"pagination"</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">"current"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">"size"</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">"total"</span><span class="token operator">:</span> <span class="token number">100</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre>
</div></li>
<li><strong>调试示例</strong>:<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token string">"https://blogapi.pysio.online/images/list?page=1&amp;limit=10"</span></span>
<span class="line"></span></code></pre>
</div></li>
</ul>
<h3>6. 获取图片总数</h3>
<ul>
<li><strong>请求路径</strong>: <code>/images/count</code></li>
<li><strong>请求方法</strong>: GET</li>
<li><strong>响应格式</strong>: application/json</li>
<li><strong>响应示例</strong>:<div class="language-json" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">"count"</span><span class="token operator">:</span> <span class="token number">100</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre>
</div></li>
<li><strong>调试示例</strong>:<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">curl</span> https://blogapi.pysio.online/images/count</span>
<span class="line"></span></code></pre>
</div></li>
</ul>
<h3>7. 删除图片</h3>
<ul>
<li><strong>请求路径</strong>: <code>/images/:hash</code></li>
<li><strong>请求方法</strong>: DELETE</li>
<li><strong>请求头</strong>:<div class="language-text" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">Authorization: Bearer {ADMIN_TOKEN}</span>
<span class="line"></span></code></pre>
</div></li>
<li><strong>参数说明</strong>:
<ul>
<li><code>hash</code>: 要删除的图片hash</li>
</ul>
</li>
<li><strong>响应格式</strong>: application/json</li>
<li><strong>成功响应</strong>:<div class="language-json" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">"message"</span><span class="token operator">:</span> <span class="token string">"Image deleted successfully"</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre>
</div></li>
<li><strong>错误响应</strong>:<div class="language-json" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">"error"</span><span class="token operator">:</span> <span class="token string">"Image not found"</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre>
</div></li>
<li><strong>调试示例</strong>:<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token parameter variable">-X</span> DELETE <span class="token punctuation">\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">"Authorization: Bearer your_admin_token"</span> <span class="token punctuation">\</span></span>
<span class="line">  https://blogapi.pysio.online/images/your_image_hash</span>
<span class="line"></span></code></pre>
</div></li>
</ul>
<h3>8. 批量上传工具</h3>
<p>提供了两种批量上传工具：</p>
<ol>
<li>Go 命令行工具：</li>
</ol>
<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 编译工具</span></span>
<span class="line">go build <span class="token parameter variable">-o</span> uploader cmd/upload/main.go</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用工具</span></span>
<span class="line">./uploader <span class="token parameter variable">-folder</span> /path/to/images <span class="token punctuation">\</span></span>
<span class="line">  <span class="token parameter variable">-api</span> https://blogapi.pysio.online <span class="token punctuation">\</span></span>
<span class="line">  <span class="token parameter variable">-token</span> your_admin_token <span class="token punctuation">\</span></span>
<span class="line">  <span class="token parameter variable">-concurrent</span> <span class="token number">5</span></span>
<span class="line"></span></code></pre>
</div><ol start="2">
<li>PowerShell 脚本：</li>
</ol>
<div class="language-powershell" data-highlighter="prismjs" data-ext="powershell"><pre><code><span class="line"><span class="token comment"># 运行脚本</span></span>
<span class="line"><span class="token punctuation">.</span>\upload<span class="token punctuation">.</span>ps1 <span class="token operator">-</span>folder <span class="token string">"C:\Images"</span> `</span>
<span class="line">  <span class="token operator">-</span>token <span class="token string">"your_token"</span> `</span>
<span class="line">  <span class="token operator">-</span>retries 5 `</span>
<span class="line">  <span class="token operator">-</span>timeout 60 `</span>
<span class="line">  <span class="token operator">-</span>api <span class="token string">"https://blogapi.pysio.online"</span></span>
<span class="line"></span></code></pre>
</div><h2>Steam 状态接口</h2>
<h3>1. Steam 游戏状态</h3>
<ul>
<li><strong>请求路径</strong>: <code>/steam_status</code></li>
<li><strong>请求方法</strong>: GET</li>
<li><strong>响应格式</strong>: application/json</li>
<li><strong>响应示例（游戏中）</strong>:<div class="language-json" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">"status"</span><span class="token operator">:</span> <span class="token string">"在游戏中"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"game"</span><span class="token operator">:</span> <span class="token string">"游戏名称"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"game_id"</span><span class="token operator">:</span> <span class="token string">"游戏ID"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"游戏描述"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"price"</span><span class="token operator">:</span> <span class="token string">"游戏价格"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"playtime"</span><span class="token operator">:</span> <span class="token string">"游戏时长"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"achievement_percentage"</span><span class="token operator">:</span> <span class="token string">"成就完成度"</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre>
</div></li>
<li><strong>响应示例（不在游戏中）</strong>:<div class="language-json" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">"status"</span><span class="token operator">:</span> <span class="token string">"在线"</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre>
</div></li>
<li><strong>调试示例</strong>:<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">curl</span> https://blogapi.pysio.online/steam_status</span>
<span class="line"></span></code></pre>
</div></li>
</ul>
<h2>IP 查询接口</h2>
<h3>1. IP 信息查询</h3>
<ul>
<li><strong>请求路径</strong>: <code>/ipcheck</code></li>
<li><strong>请求方法</strong>: GET</li>
<li><strong>查询参数</strong>:
<ul>
<li><code>ip</code>: IP地址</li>
</ul>
</li>
<li><strong>响应格式</strong>: application/json</li>
<li><strong>响应示例</strong>:<div class="language-json" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">"ip"</span><span class="token operator">:</span> <span class="token string">"IP地址"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"hostname"</span><span class="token operator">:</span> <span class="token string">"主机名"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"city"</span><span class="token operator">:</span> <span class="token string">"城市"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"region"</span><span class="token operator">:</span> <span class="token string">"地区"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"country"</span><span class="token operator">:</span> <span class="token string">"国家"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"loc"</span><span class="token operator">:</span> <span class="token string">"位置坐标"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"org"</span><span class="token operator">:</span> <span class="token string">"组织"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"postal"</span><span class="token operator">:</span> <span class="token string">"邮编"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"timezone"</span><span class="token operator">:</span> <span class="token string">"时区"</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre>
</div></li>
<li><strong>调试示例</strong>:<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token string">"https://blogapi.pysio.online/ipcheck?ip=8.8.8.8"</span></span>
<span class="line"></span></code></pre>
</div></li>
</ul>
<h2>API 统计接口</h2>
<h3>1. 获取所有API调用统计</h3>
<ul>
<li><strong>请求路径</strong>: <code>/api_stats</code></li>
<li><strong>请求方法</strong>: GET</li>
<li><strong>响应格式</strong>: application/json</li>
<li><strong>响应示例</strong>:<div class="language-json" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"API路径"</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">"count"</span><span class="token operator">:</span> 调用次数<span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">"lastUpdated"</span><span class="token operator">:</span> <span class="token string">"最后调用时间"</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre>
</div></li>
<li><strong>调试示例</strong>:<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">curl</span> https://blogapi.pysio.online/api_stats</span>
<span class="line"></span></code></pre>
</div></li>
</ul>
<h3>2. 获取特定API调用统计</h3>
<ul>
<li><strong>请求路径</strong>: <code>/api_stats/:key</code></li>
<li><strong>请求方法</strong>: GET</li>
<li><strong>参数说明</strong>:
<ul>
<li><code>key</code>: API路径</li>
</ul>
</li>
<li><strong>响应格式</strong>: application/json</li>
<li><strong>响应示例</strong>:<div class="language-json" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"API路径"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"count"</span><span class="token operator">:</span> 调用次数<span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"lastUpdated"</span><span class="token operator">:</span> <span class="token string">"最后调用时间"</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre>
</div>或<div class="language-json" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"API路径"</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"count"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">"lastUpdated"</span><span class="token operator">:</span> <span class="token null keyword">null</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre>
</div></li>
<li><strong>调试示例</strong>:<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">curl</span> https://blogapi.pysio.online/api_stats/random_image</span>
<span class="line"></span></code></pre>
</div></li>
</ul>
<h2>错误处理</h2>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>请确保您的应用程序正确处理以下错误响应：</p>
</div>
<h3>常见错误码</h3>
<p>| 错误码 | 说明 | 处理建议 |
|</p>
]]></content:encoded>
    </item>
    <item>
      <title>再见2024！</title>
      <link>https://www.pysio.online/posts/daily/bye2024.html</link>
      <guid>https://www.pysio.online/posts/daily/bye2024.html</guid>
      <source url="https://www.pysio.online/rss.xml">再见2024！</source>
      <description>又到了一年一度的跨年（什么废话）的时候，又是一年做总结的时候 至于今年干了啥 uh 3-10 号再来补写把 笑 至于现在 我先去睡觉啦！ EDIT: 绝对不是偷懒喵uwu (x 先放一个Github统计图在下面uwu)</description>
      <category>daily</category>
      <pubDate>Wed, 01 Jan 2025 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>又到了一年一度的跨年（什么废话）的时候，又是一年做总结的时候</p>
<p>至于今年干了啥 uh 3-10 号再来补写把 笑 至于现在 我先去睡觉啦！</p>
<p>EDIT: 绝对不是偷懒喵uwu (x 先放一个Github统计图在下面uwu)</p>
]]></content:encoded>
    </item>
    <item>
      <title>GTNH笔记本</title>
      <link>https://www.pysio.online/posts/daily/GTNH.html</link>
      <guid>https://www.pysio.online/posts/daily/GTNH.html</guid>
      <source url="https://www.pysio.online/rss.xml">GTNH笔记本</source>
      <description>相关信息 这里存放着我游玩GTNH时的笔记本，记录了一些有用的配方和信息。 合金 耐酸铝 (Alumite) 熔炼 5 个铝锭 熔炼 2 个钢锭 熔炼 1 个黑曜石 得到 2 个耐酸铝</description>
      <category>daily</category>
      <pubDate>Sat, 14 Dec 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里存放着我游玩GTNH时的笔记本，记录了一些有用的配方和信息。</p>
</div>
<h2>合金</h2>
<h3>耐酸铝 (Alumite)</h3>
<ul>
<li>熔炼 5 个铝锭</li>
<li>熔炼 2 个钢锭</li>
<li>熔炼 1 个黑曜石</li>
</ul>
<p>得到 2 个耐酸铝</p>
]]></content:encoded>
    </item>
    <item>
      <title>博客目前的架构</title>
      <link>https://www.pysio.online/posts/develop/Blog%20Architecture.html</link>
      <guid>https://www.pysio.online/posts/develop/Blog%20Architecture.html</guid>
      <source url="https://www.pysio.online/rss.xml">博客目前的架构</source>
      <description>主站框架 使用框架 Vuepress-Theme-Hope 图片/头像/字体 分发 所有文件使用 Pysio-Files-API 分发 字体使用 Font Awesome 添加 自定义图标 图片存放在仓库 pysio2007/Imges 头像使用 Github Actions 自动获取并更新 仓库 pysio2007/Avatar-To-Img 分析脚...</description>
      <category>develop</category>
      <pubDate>Sun, 24 Nov 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2>主站框架</h2>
<p>使用框架 <a href="https://github.com/vuepress-theme-hope/vuepress-theme-hope/" target="_blank" rel="noopener noreferrer">Vuepress-Theme-Hope</a></p>
<h2>图片/头像/字体 分发</h2>
<p>所有文件使用 <a href="https://github.com/pysio2007/Files-API/" target="_blank" rel="noopener noreferrer">Pysio-Files-API</a> 分发</p>
<p>字体使用 <a href="https://fontawesome.com/" target="_blank" rel="noopener noreferrer">Font Awesome</a> 添加 <a href="https://www.pysio.online/posts/develop/icon.html" target="_blank" rel="noopener noreferrer">自定义图标</a></p>
<p>图片存放在仓库 <a href="https://github.com/pysio2007/Imges" target="_blank" rel="noopener noreferrer">pysio2007/Imges</a></p>
<p>头像使用 Github Actions 自动获取并更新 仓库 <a href="https://github.com/pysio2007/avatar-to-img" target="_blank" rel="noopener noreferrer">pysio2007/Avatar-To-Img</a></p>
<h2>分析脚本</h2>
<p><a href="https://www.cloudflare.com/" target="_blank" rel="noopener noreferrer">Cloudflare Browser Insights</a></p>
<p><a href="https://umami.is/" target="_blank" rel="noopener noreferrer">Umami</a></p>
<h2>网页托管和分发</h2>
<p>目前 网站部署在2个地方 分别是 自建集群 和 <a href="https://pages.cloudflare.com/" target="_blank" rel="noopener noreferrer">Cloudflare Pages</a> <s>所有流量均由 Cloudflare 分发</s></p>
<p>EDIT: 因自建Anycast网络，目前网站由Anycast集群分发</p>
]]></content:encoded>
    </item>
    <item>
      <title>随机图片API</title>
      <link>https://www.pysio.online/posts/develop/randomimage.html</link>
      <guid>https://www.pysio.online/posts/develop/randomimage.html</guid>
      <source url="https://www.pysio.online/rss.xml">随机图片API</source>
      <description>本站现在提供了一个随机图片的API 你可以直接使用下面的URL获取一张随机图片</description>
      <category>develop</category>
      <pubDate>Thu, 07 Nov 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>本站现在提供了一个随机图片的API 你可以直接使用下面的URL获取一张随机图片</p>
<div class="language-url" data-highlighter="prismjs" data-ext="url"><pre><code><span class="line"><span class="token scheme">https<span class="token scheme-delimiter">:</span></span><span class="token authority"><span class="token authority-delimiter">//</span><span class="token host">blogapi.pysio.online</span></span><span class="token path"><span class="token path-separator">/</span>random_image</span></span>
<span class="line"></span></code></pre>
</div>]]></content:encoded>
      <enclosure url="https://blogapi.pysio.online/random_image" type="image/"/>
    </item>
    <item>
      <title>本博客自定义的FontAwesome</title>
      <link>https://www.pysio.online/posts/develop/icon.html</link>
      <guid>https://www.pysio.online/posts/develop/icon.html</guid>
      <source url="https://www.pysio.online/rss.xml">本博客自定义的FontAwesome</source>
      <description>使用 你可以直接引用以下JS文件来使用本博客自定义的FontAwesome 包含的图标 Destiny2 JetBrains JetBrains IntelliJ IDEA JetBrains PyCharm Github Issues Progressive Web Apps Proxmox Virtual Environment Modrinth ...</description>
      <category>develop</category>
      <pubDate>Fri, 01 Nov 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2>使用</h2>
<p>你可以直接引用以下JS文件来使用本博客自定义的FontAwesome</p>
<div class="language-javascript" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://files.pysio.online/Pysio-FontAwesome/js/custom-icons.js"</span> crossorigin<span class="token operator">=</span><span class="token string">"anonymous"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre>
</div><h2>包含的图标</h2>
<h3>Destiny2 <i class="fa-kit fa-destiny2"></i></h3>
<div class="language-javascript" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa-kit fa-destiny2"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre>
</div><h3>JetBrains <i class="fa-kit fa-jetbrains"></i></h3>
<div class="language-javascript" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa-kit fa-jetbrains"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre>
</div><h3>JetBrains IntelliJ IDEA <i class="fa-kit fa-idea"></i></h3>
<div class="language-javascript" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa-kit fa-idea"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre>
</div><h3>JetBrains PyCharm <i class="fa-kit fa-pycharm"></i></h3>
<div class="language-javascript" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa-kit fa-pycharm"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre>
</div><h3>Github Issues <i class="fa-kit fa-issues"></i></h3>
<div class="language-javascript" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa-kit fa-issues"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre>
</div><h3>Progressive Web Apps <i class="fa-kit fa-pwa"></i></h3>
<div class="language-javascript" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa-kit fa-pwa"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre>
</div><h3>Proxmox Virtual Environment <i class="fa-kit fa-pve"></i></h3>
<div class="language-javascript" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa-kit fa-pve"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre>
</div><h3>Modrinth <i class="fa-kit fa-modrinth"></i></h3>
<div class="language-javascript" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa-kit fa-modrinth"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre>
</div><h3>Visual Studio Code <i class="fa-kit fa-vscode"></i></h3>
<div class="language-javascript" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa-kit fa-vscode"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre>
</div><h3>Minecraft Creeper <i class="fa-kit fa-creeper"></i></h3>
<div class="language-javascript" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa-kit fa-creeper"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre>
</div>]]></content:encoded>
    </item>
    <item>
      <title>从WordPress迁移到VuePress</title>
      <link>https://www.pysio.online/posts/daily/WordPress%20to%20VuePress.html</link>
      <guid>https://www.pysio.online/posts/daily/WordPress%20to%20VuePress.html</guid>
      <source url="https://www.pysio.online/rss.xml">从WordPress迁移到VuePress</source>
      <description>开篇 为什么要迁移？ 在过去的1年多 我都使用WordPress 作为我的博客系统，但是我手上的小鸡实在是太弱了，实在是带不动WordPress这个大家伙，所以我决定迁移到VuePress上来。 开始迁移 最开始 我看了很多静态资源生成系统，比如Hexo、Hugo、Jekyll，最后我选择了VuePress Theme Hope。 那么开始迁移吧！ 安...</description>
      <category>daily</category>
      <pubDate>Mon, 21 Oct 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2>开篇 为什么要迁移？</h2>
<p>在过去的1年多 我都使用WordPress 作为我的博客系统，但是我手上的小鸡实在是太弱了，实在是带不动WordPress这个大家伙，所以我决定迁移到VuePress上来。</p>
<h2>开始迁移</h2>
<p>最开始 我看了很多静态资源生成系统，比如Hexo、Hugo、Jekyll，最后我选择了<a href="https://theme-hope.vuejs.press/" target="_blank" rel="noopener noreferrer">VuePress Theme Hope</a>。</p>
<p>那么开始迁移吧！</p>
<h2>安装VuePress Theme Hope</h2>
<p>首先 安装 Node.js 18.0.0+</p>
<h3>然后创建项目模板</h3>
<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> init vuepress-theme-hope@latest my-docs</span>
<span class="line"></span></code></pre>
</div><p>这里的 my-docs 是一个参数，代表 VuePress Theme Hope 项目的文件夹名称。</p>
<p>执行完命令后根据提示，通过键盘 ↓ 选择 简体中文 并回车来按需选择。</p>
<h3>项目命令</h3>
<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 启动开发服务器</span></span>
<span class="line"><span class="token function">npm</span> docs:dev</span>
<span class="line"><span class="token comment"># 构建项目并输出</span></span>
<span class="line"><span class="token function">npm</span> docs:build</span>
<span class="line"><span class="token comment"># 清除缓存并启动开发服务器</span></span>
<span class="line"><span class="token function">npm</span> docs:clean-dev</span>
<span class="line"></span></code></pre>
</div><p>启动项目，浏览器输入 <a href="http://localhost:8080/" target="_blank" rel="noopener noreferrer">http://localhost:8080/</a> 查看效果</p>
<h3>目录结构</h3>
<div class="language-text" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">.</span>
<span class="line">├── .github (可选的) → GitHub 配置文件存放路径</span>
<span class="line">│    └── workflow → GitHub 工作流配置</span>
<span class="line">│         └── docs-deploy.yml → 自动部署文档的工作流</span>
<span class="line">│</span>
<span class="line">├── src → 文档文件夹</span>
<span class="line">│    │</span>
<span class="line">│    ├── .vuepress (可选的) → VuePress 配置文件夹</span>
<span class="line">│    │    │</span>
<span class="line">│    │    ├── dist (默认的) → 构建输出目录</span>
<span class="line">│    │    │</span>
<span class="line">│    │    ├── public (可选的) → 静态资源目录</span>
<span class="line">│    │    │</span>
<span class="line">│    │    ├── styles (可选的) → 用于存放样式相关的文件</span>
<span class="line">│    │    │</span>
<span class="line">│    │    ├── config.{js,ts} (可选的) → 配置文件的入口文件</span>
<span class="line">│    │    │</span>
<span class="line">│    │    └── client.{js,ts} (可选的) → 客户端文件</span>
<span class="line">│    │</span>
<span class="line">│    ├── ... → 其他项目文档</span>
<span class="line">│    │</span>
<span class="line">│    └── README.md → 项目主页</span>
<span class="line">│</span>
<span class="line">└── package.json → Nodejs 配置文件</span>
<span class="line"></span>
<span class="line"></span></code></pre>
</div><h3>接下来 做一些个性化的配置</h3>
<h3>首页图片全屏设置</h3>
<p>如果不想首页图片全屏,，打开README.md找到heroFullScreen修改为fasle</p>
<div class="language-markdown" data-highlighter="prismjs" data-ext="md"><pre><code><span class="line">heroFullScreen: false</span>
<span class="line"></span></code></pre>
</div><p>效果：</p>
<figure><img src="https://files.pysio.online/Images/blogdemo.webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>首页项目设置</h3>
<p>初始化是会默认生成以下内容，如果要修改为自己的项目要怎么修改呢。</p>
<figure><img src="https://files.pysio.online/Images/defpoj.webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>打开<code>README.md</code>，找到<code>projects</code>，编辑成你要的内容即可。</p>
<div class="language-markdown" data-highlighter="prismjs" data-ext="md"><pre><code><span class="line">projects:</span>
<span class="line">  <span class="token list punctuation">-</span> icon: project</span>
<span class="line">    name: 项目名称</span>
<span class="line">    desc: 项目详细描述</span>
<span class="line">    link: https://你的项目链接</span>
<span class="line"></span>
<span class="line">  <span class="token list punctuation">-</span> icon: link</span>
<span class="line">    name: 链接名称</span>
<span class="line">    desc: 链接详细描述</span>
<span class="line">    link: https://链接地址</span>
<span class="line"></span>
<span class="line">  <span class="token list punctuation">-</span> icon: book</span>
<span class="line">    name: 书籍名称</span>
<span class="line">    desc: 书籍详细描述</span>
<span class="line">    link: https://你的书籍链接</span>
<span class="line"></span>
<span class="line">  <span class="token list punctuation">-</span> icon: article</span>
<span class="line">    name: 文章名称</span>
<span class="line">    desc: 文章详细描述</span>
<span class="line">    link: https://你的文章链接</span>
<span class="line"></span>
<span class="line">  <span class="token list punctuation">-</span> icon: friend</span>
<span class="line">    name: 伙伴名称</span>
<span class="line">    desc: 伙伴详细介绍</span>
<span class="line">    link: https://你的伙伴链接</span>
<span class="line"></span>
<span class="line">  <span class="token list punctuation">-</span> icon: /logo.svg</span>
<span class="line">    name: 自定义项目</span>
<span class="line">    desc: 自定义详细介绍</span>
<span class="line">    link: https://你的自定义链接</span>
<span class="line"></span></code></pre>
</div><p>如果不想显示，直接把<code>projects</code>的内容全部删除即可，效果如图：</p>
<figure><img src="https://files.pysio.online/Images/blognopoj.webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
]]></content:encoded>
      <enclosure url="https://files.pysio.online/Images/blogdemo.webp" type="image/webp"/>
    </item>
    <item>
      <title>狠狠的石健你们</title>
      <link>https://www.pysio.online/posts/NekoXii/Crazy.html</link>
      <guid>https://www.pysio.online/posts/NekoXii/Crazy.html</guid>
      <source url="https://www.pysio.online/rss.xml">狠狠的石健你们</source>
      <description>你҉҉҈ 要҉҉҈ 永҉҉҈ 远҉҉҈ 爱҉҉҈ 我҉҉҈ 啊҉҉҈҉҉҈</description>
      <category>NekoXii</category>
      <pubDate>Sun, 20 Oct 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>你҉҉҈ 要҉҉҈ 永҉҉҈ 远҉҉҈ 爱҉҉҈ 我҉҉҈ 啊҉҉҈҉҉҈</p>
<!-- more -->
<figure><img src="https://files.pysio.online/Images/899f87e032161b04c94b0feeb972bdf3_720.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
]]></content:encoded>
      <enclosure url="https://files.pysio.online/Images/899f87e032161b04c94b0feeb972bdf3_720.png" type="image/png"/>
    </item>
    <item>
      <title>火神80群里的梗图</title>
      <link>https://www.pysio.online/posts/daily/HuoShen80Hub.html</link>
      <guid>https://www.pysio.online/posts/daily/HuoShen80Hub.html</guid>
      <source url="https://www.pysio.online/rss.xml">火神80群里的梗图</source>
      <description>相关信息 这里会展示火神80群里的梗图</description>
      <category>daily</category>
      <pubDate>Fri, 11 Oct 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- markdownlint-disable MD028 -->
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>这里会展示火神80群里的梗图</p>
</div>
<!-- markdownlint-enable MD028 -->
<!-- more -->
<h2>图片展示</h2>
]]></content:encoded>
    </item>
    <item>
      <title>有关于本博客的PWA</title>
      <link>https://www.pysio.online/posts/daily/PWA.html</link>
      <guid>https://www.pysio.online/posts/daily/PWA.html</guid>
      <source url="https://www.pysio.online/rss.xml">有关于本博客的PWA</source>
      <description>相关信息 渐进式网络应用程序（英语：Progressive Web Apps，简称：PWA）是一种普通网页或网站架构起来的网络应用程序，但它可以以传统应用程序或原生移动应用程序形式展示给用户。这种应用程序形态视图将目前最为现代化的浏览器提供的功能与移动设备的体验优势相结合。</description>
      <category>daily</category>
      <pubDate>Wed, 09 Oct 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- markdownlint-disable MD028 -->
<!-- > [!warning] 
> 因为目前在快速迭代中，PWA暂时关闭，等待后续开发完成后再开启。  -->
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>渐进式网络应用程序（英语：Progressive Web Apps，简称：PWA）是一种普通网页或网站架构起来的网络应用程序，但它可以以传统应用程序或原生移动应用程序形式展示给用户。这种应用程序形态视图将目前最为现代化的浏览器提供的功能与移动设备的体验优势相结合。</p>
</div>
<!-- markdownlint-enable MD028 -->
]]></content:encoded>
    </item>
    <item>
      <title>部署OpenMcim节点</title>
      <link>https://www.pysio.online/posts/develop/OpenMCIM.html</link>
      <guid>https://www.pysio.online/posts/develop/OpenMCIM.html</guid>
      <source url="https://www.pysio.online/rss.xml">部署OpenMcim节点</source>
      <description>相关信息 MCIM 需要提供文件镜像，但由于成本问题，以及受到 OpenBMCLAPI 的启发，本项目分发 Mod 文件基于网盘 感谢各位的支持~！感谢您为改善国内 Mod 下载环境的贡献！</description>
      <category>develop</category>
      <pubDate>Mon, 07 Oct 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- markdownlint-disable MD028 -->
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>MCIM 需要提供文件镜像，但由于成本问题，以及受到 OpenBMCLAPI 的启发，本项目分发 Mod 文件基于网盘
感谢各位的支持~！感谢您为改善国内 Mod 下载环境的贡献！</p>
</div>
<!-- markdownlint-enable MD028 -->
<!-- more -->
<h2>OpenBmclapi</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>我更建议你使用已经修改过的OpenMcim执行上线</p>
</div>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>因为 Modrinth 原因 会有很多Hash错误的文件 未修改的OpenBmclapi无法上线</p>
</div>
<h3>从源码运行</h3>
<h4>环境</h4>
<ul>
<li>Node.js 18以上</li>
<li>Windows/MacOS/Linux, x86/arm均可 (凡是nodejs支持的环境都可以)</li>
</ul>
<h4>设置环境</h4>
<ol>
<li>去 <a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener noreferrer">https://nodejs.org/zh-cn/</a> 下载LTS版本的nodejs并安装</li>
<li>Clone 并安装依赖</li>
</ol>
<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">git</span> clone https://github.com/bangbang93/openbmclapi</span>
<span class="line"><span class="token builtin class-name">cd</span> openbmclapi</span>
<span class="line"><span class="token comment">## 安装依赖</span></span>
<span class="line"><span class="token function">npm</span> ci</span>
<span class="line"><span class="token comment">## 编译</span></span>
<span class="line"><span class="token function">npm</span> run build</span>
<span class="line"><span class="token comment">## 运行</span></span>
<span class="line"><span class="token function">node</span> dist/index.js</span>
<span class="line"></span></code></pre>
</div><ol start="3">
<li>
<p>如果你看到了 <code>CLUSTER_ID is not set</code> 的报错, 说明一切正常, 接下来 修改代码 使其运行在OpenMCIM</p>
</li>
<li>
<p>修改 <code>dist/cluster.js</code> 文件, 找到</p>
</li>
</ol>
<div class="language-javascript" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> whiteListDomain <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'localhost'</span><span class="token punctuation">,</span> <span class="token string">'bangbang93.com'</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre>
</div><p>修改为</p>
<div class="language-javascript" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> whiteListDomain <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'localhost'</span><span class="token punctuation">,</span> <span class="token string">'bangbang93.com'</span><span class="token punctuation">,</span><span class="token string">'files.mcimirror.top'</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre>
</div><h4>设置参数</h4>
<p>在项目根目录创建一个文件, 名为 <code>.env</code></p>
<p>写入如下内容</p>
<div class="language-env" data-highlighter="prismjs" data-ext="env"><pre><code><span class="line">CLUSTER_ID=你的CLUSTER_ID</span>
<span class="line">CLUSTER_SECRET=你的CLUSTER_SECRET</span>
<span class="line">CLUSTER_PORT=对外访问端口</span>
<span class="line">CLUSTER_BMCLAPI=https://files.mcimirror.top</span>
<span class="line"></span></code></pre>
</div><p>CLUSTER_ID 和 CLUSTER_SECRET 请联系管理员获取</p>
<p>如果配置无误的话, 运行程序, 就会开始拉取文件, 拉取完成后就会开始等待服务器分发请求了</p>
<details class="hint-container details"><summary>这是一个简短的修改部署视频</summary>
</details>
<h2>Node-OpenMcim</h2>
<h3>使用Docker</h3>
<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token punctuation">\</span></span>
<span class="line"><span class="token parameter variable">-e</span> <span class="token assign-left variable">CLUSTER_ID</span><span class="token operator">=</span><span class="token variable">${CLUSTER_ID}</span> <span class="token punctuation">\</span></span>
<span class="line"><span class="token parameter variable">-e</span> <span class="token assign-left variable">CLUSTER_SECRET</span><span class="token operator">=</span><span class="token variable">${CLUSTER_SECRET}</span> <span class="token punctuation">\</span></span>
<span class="line"><span class="token parameter variable">-e</span> <span class="token assign-left variable">CLUSTER_PUBLIC_PORT</span><span class="token operator">=</span><span class="token variable">${CLUSTER_PORT}</span> <span class="token punctuation">\</span></span>
<span class="line"><span class="token parameter variable">-e</span> <span class="token assign-left variable">TZ</span><span class="token operator">=</span>Asia/Shanghai <span class="token punctuation">\</span></span>
<span class="line"><span class="token parameter variable">-v</span> /data/mcim:/opt/mcim <span class="token punctuation">\</span></span>
<span class="line"><span class="token parameter variable">-p</span> <span class="token variable">${CLUSTER_PORT}</span><span class="token builtin class-name">:</span><span class="token variable">${CLUSTER_PORT}</span> <span class="token punctuation">\</span></span>
<span class="line"><span class="token parameter variable">--restart</span> unless-stop <span class="token punctuation">\</span></span>
<span class="line"><span class="token parameter variable">--name</span> mcim <span class="token punctuation">\</span></span>
<span class="line">zerowolf233/mcim</span>
<span class="line"></span></code></pre>
</div><h3>从源码安装</h3>
<h4>环境</h4>
<ul>
<li>Node.js 18 以上</li>
<li>Windows/MacOS/Linux</li>
<li>x86/arm 均可 (需支持Nodejs)</li>
</ul>
<h4>设置环境</h4>
<ol>
<li>去 <a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener noreferrer">https://nodejs.org/zh-cn/</a> 下载LTS版本的nodejs并安装</li>
<li>Clone 并安装依赖</li>
</ol>
<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">git</span> clone https://github.com/ZeroWolf233/node-openmcim</span>
<span class="line"><span class="token builtin class-name">cd</span> node-openmcim </span>
<span class="line"><span class="token comment">## 安装依赖</span></span>
<span class="line"><span class="token function">npm</span> ci</span>
<span class="line"><span class="token comment">## 编译</span></span>
<span class="line"><span class="token function">npm</span> run build</span>
<span class="line"><span class="token comment">## 运行</span></span>
<span class="line"><span class="token function">node</span> dist/index.js</span>
<span class="line"></span></code></pre>
</div><ol start="3">
<li>如果你看到了 <code>CLUSTER_ID is not set</code> 的报错, 说明一切正常, 该设置参数了</li>
</ol>
<h4>设置参数</h4>
<p>在项目根目录创建一个文件, 名为 <code>.env</code></p>
<p>写入如下内容</p>
<div class="language-env" data-highlighter="prismjs" data-ext="env"><pre><code><span class="line">CLUSTER_ID=你的节点ID</span>
<span class="line">CLUSTER_SECRET=你的节点密钥</span>
<span class="line">CLUSTER_PUBLIC_PORT=你的对外开放端口（用户请求时访问）</span>
<span class="line">CLUSTER_PORT=你的本地开放端口</span>
<span class="line">CLUSTER_STORAGE=存储类型</span>
<span class="line">CLUSTER_STORAGE_OPTIONS=存储配置项（请参考上方Alist配置）</span>
<span class="line"></span></code></pre>
</div><p>如果配置无误的话, 运行程序, 就会开始拉取文件, 拉取完成后就会开始等待服务器分发请求了！</p>
<h2>反向代理节点</h2>
<h3>Windows 部署</h3>
<ol>
<li>
<p>前往 <a href="https://www.pysio.tech/zh-CN/MCIM/" target="_blank" rel="noopener noreferrer">https://www.pysio.tech/zh-CN/MCIM/</a> 下载最新的MCIM反向代理节点</p>
</li>
<li>
<p>解压文件</p>
</li>
<li>
<p>修改.env文件 填写如下内容</p>
</li>
</ol>
<div class="language-env" data-highlighter="prismjs" data-ext="env"><pre><code><span class="line">CLUSTER_ID=你的节点ID</span>
<span class="line">CLUSTER_SECRET=你的节点密钥</span>
<span class="line">CLUSTER_PUBLIC_PORT=你的对外开放端口（用户请求时访问）</span>
<span class="line">CLUSTER_PORT=你的本地开放端口</span>
<span class="line"></span></code></pre>
</div><ol start="4">
<li>运行<code>run.ps1</code> 上线</li>
</ol>
<h3>Linux 部署</h3>
<h5>环境</h5>
<ul>
<li>Node.js 18 以上</li>
<li>Windows/MacOS/Linux</li>
<li>x86/arm 均可 (需支持Nodejs)</li>
</ul>
<h5>部署</h5>
<ol>
<li>
<p>前往 <a href="https://www.pysio.tech/zh-CN/MCIM/" target="_blank" rel="noopener noreferrer">https://www.pysio.tech/zh-CN/MCIM/</a> 下载最新的MCIM反向代理节点</p>
</li>
<li>
<p>解压文件</p>
</li>
<li>
<p>执行如下命令获取依赖包</p>
</li>
</ol>
<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span></span>
<span class="line"></span></code></pre>
</div><ol start="4">
<li>修改.env文件 填写如下内容</li>
</ol>
<div class="language-env" data-highlighter="prismjs" data-ext="env"><pre><code><span class="line">CLUSTER_ID=你的节点ID</span>
<span class="line">CLUSTER_SECRET=你的节点密钥</span>
<span class="line">CLUSTER_PUBLIC_PORT=你的对外开放端口（用户请求时访问）</span>
<span class="line">CLUSTER_PORT=你的本地开放端口</span>
<span class="line"></span></code></pre>
</div><ol start="5">
<li>运行<code>node dist/index.js</code>上线</li>
</ol>
<h2>特别鸣谢</h2>
]]></content:encoded>
    </item>
    <item>
      <title>命运2 年7</title>
      <link>https://www.pysio.online/posts/daily/Destiny%20Year7.html</link>
      <guid>https://www.pysio.online/posts/daily/Destiny%20Year7.html</guid>
      <source url="https://www.pysio.online/rss.xml">命运2 年7</source>
      <description>这几天打年7打的脑子疼，凯德活了 但是没有完全活，最后还是死了。 8号凌晨1点开的Dayone 打了，6小时才过老一 直接向见证者投降，太难了。 截至发文时，目前只有1队通关 不多说了 放点截图</description>
      <category>daily</category>
      <pubDate>Sun, 09 Jun 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>这几天打年7打的脑子疼，凯德活了 但是没有完全活，最后还是死了。</p>
<p>8号凌晨1点开的Dayone 打了，6小时才过老一 直接向见证者投降，太难了。</p>
<p>截至发文时，目前只有1队通关</p>
<p>不多说了 放点截图</p>
<!-- more -->
<p><img src="https://files.pysio.online/Images/20241006003452.png" alt="" loading="lazy">
<img src="https://files.pysio.online/Images/20241006003529.png" alt="" loading="lazy">
<img src="https://files.pysio.online/Images/20241006003549.png" alt="" loading="lazy">
<img src="https://files.pysio.online/Images/20241006003612.png" alt="" loading="lazy">
<img src="https://files.pysio.online/Images/20241006003632.png" alt="" loading="lazy"></p>
]]></content:encoded>
      <enclosure url="https://files.pysio.online/Images/20241006003452.png" type="image/png"/>
    </item>
    <item>
      <title>有关于自托管Gitlab被拦截这件事</title>
      <link>https://www.pysio.online/posts/daily/Gitlab%20Pollution.html</link>
      <guid>https://www.pysio.online/posts/daily/Gitlab%20Pollution.html</guid>
      <source url="https://www.pysio.online/rss.xml">有关于自托管Gitlab被拦截这件事</source>
      <description>我今天闲的一Ping 我就在纳闷了，为啥会解析到这个 IP 上，直到我一访问。 Uh 这多少是有点离谱了。我也不知我犯了啥天条能被扔进去。。。。 先看看吧，如果被大范围屏蔽的话，还得考虑咋申诉。。。 Edit 2023-12-26 : 打屏蔽当地96110申诉 让我等待 一日后 重庆96110告诉我域名加白，网站就不跳转反诈中心了</description>
      <category>daily</category>
      <pubDate>Mon, 18 Dec 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>我今天闲的一Ping<br>
<img src="https://files.pysio.online/Images/20241006004058.png" alt="" loading="lazy"></p>
<p>我就在纳闷了，为啥会解析到这个 <a href="https://106.74.25.198/" target="_blank" rel="noopener noreferrer">IP</a> 上，直到我一访问。<br>
<img src="https://files.pysio.online/Images/20241006004137.png" alt="" loading="lazy"></p>
<p>Uh 这多少是有点离谱了。我也不知我犯了啥天条能被扔进去。。。。</p>
<p>先看看吧，如果被大范围屏蔽的话，还得考虑咋申诉。。。</p>
<h3>Edit 2023-12-26 :</h3>
<p>打屏蔽当地96110申诉 让我等待</p>
<p>一日后 重庆96110告诉我域名加白，网站就不跳转反诈中心了</p>
]]></content:encoded>
      <enclosure url="https://files.pysio.online/Images/20241006004058.png" type="image/png"/>
    </item>
    <item>
      <title>公共DNS/DOH服务</title>
      <link>https://www.pysio.online/posts/develop/Public%20DNS%20DOH.html</link>
      <guid>https://www.pysio.online/posts/develop/Public%20DNS%20DOH.html</guid>
      <source url="https://www.pysio.online/rss.xml">公共DNS/DOH服务</source>
      <description>注意 如果你滥用DNS 则可能导致你的IP地址被封禁</description>
      <category>develop</category>
      <pubDate>Sun, 19 May 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>注意 如果你滥用DNS 则可能导致你的IP地址被封禁</p>
<div class="language-text" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line"></span>
<span class="line">DNS Server ：101.43.154.197 (53端口暂不可用)</span>
<span class="line"></span>
<span class="line">DoH（中国大陆）: https://doh.pysio.online/dns-query</span>
<span class="line"></span>
<span class="line">DoT（中国大陆）：tls://doh.pysio.online:853</span>
<span class="line"></span>
<span class="line">DoH (非中国大陆 Cloudflare): https://dohk.pysio.online/dns-query</span>
<span class="line"></span>
<span class="line"></span></code></pre>
</div>]]></content:encoded>
    </item>
    <item>
      <title>1panel面板配置Redis Object Cache插件</title>
      <link>https://www.pysio.online/posts/develop/1Panel%20Redis%20Object%20Cache.html</link>
      <guid>https://www.pysio.online/posts/develop/1Panel%20Redis%20Object%20Cache.html</guid>
      <source url="https://www.pysio.online/rss.xml">1panel面板配置Redis Object Cache插件</source>
      <description>第一步 获取Redis的密码 [应用商店] -&amp;gt; [已安装] -&amp;gt; [Redis 参数] 就可以看见密码了 把密码记下来 第二步 修改object-cache.php文件 在网站根目录 wp-content/plugins/redis-cache/includes 下 可以找到 object-cache.php 文件 打开并编辑 添加或修改以下部分 其...</description>
      <category>develop</category>
      <pubDate>Sat, 14 Sep 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2>第一步 获取Redis的密码</h2>
<p><img src="https://files.pysio.online/Images/20241005215409.png" alt="" loading="lazy">
[应用商店] -&gt; [已安装] -&gt; [Redis 参数] 就可以看见密码了 把密码记下来</p>
<h2>第二步 修改object-cache.php文件</h2>
<p>在网站根目录 <code>wp-content/plugins/redis-cache/includes</code> 下 可以找到 <code>object-cache.php</code> 文件
打开并编辑<br>
<img src="https://files.pysio.online/Images/20241005215426.png" alt="" loading="lazy"><br>
添加或修改以下部分 其中PassWord是你刚刚获取的Redis密码</p>
<div class="language-php" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">   <span class="token string single-quoted-string">'scheme'</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'tcp'</span><span class="token punctuation">,</span></span>
<span class="line">   <span class="token string single-quoted-string">'host'</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'redis'</span><span class="token punctuation">,</span></span>
<span class="line">   <span class="token string single-quoted-string">'port'</span> <span class="token operator">=&gt;</span> <span class="token number">6379</span><span class="token punctuation">,</span></span>
<span class="line">   <span class="token string single-quoted-string">'database'</span> <span class="token operator">=&gt;</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">   <span class="token string single-quoted-string">'password'</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'你的Redis密码'</span><span class="token punctuation">,</span></span>
<span class="line">   <span class="token string single-quoted-string">'timeout'</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">   <span class="token string single-quoted-string">'read_timeout'</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">   <span class="token string single-quoted-string">'retry_interval'</span> <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span></span>
<span class="line">   <span class="token string single-quoted-string">'persistent'</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre>
</div><h2>第三步 修改wp-config.php文件</h2>
<p>在网站根目录找到wp-config.php文件 在末尾添加</p>
<div class="language-php" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token doc-comment comment">/** Redis Cache */</span></span>
<span class="line"><span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'WP_CACHE_KEY_SALT'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'001'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'WP_REDIS_SCHEME'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'tcp'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'WP_REDIS_HOST'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'redis'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'WP_REDIS_PORT'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'6379'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'WP_REDIS_DATABASE'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'WP_REDIS_PASSWORD'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'你的Redis密码'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre>
</div><h3>最后 启用插件</h3>
<p>现在启用你的Redis Object Cache插件 他现在应该正常工作了</p>
]]></content:encoded>
      <enclosure url="https://files.pysio.online/Images/20241005215409.png" type="image/png"/>
    </item>
    <item>
      <title>在PVE为OpenSuse启用xterm.js控制台</title>
      <link>https://www.pysio.online/posts/develop/Enabling%20the%20xterm.js%20console%20for%20OpenSuse%20in%20PVE%20.html</link>
      <guid>https://www.pysio.online/posts/develop/Enabling%20the%20xterm.js%20console%20for%20OpenSuse%20in%20PVE%20.html</guid>
      <source url="https://www.pysio.online/rss.xml">在PVE为OpenSuse启用xterm.js控制台</source>
      <description>关闭 VM，并给 VM 添加一个 serial port 在 PVE Host 中用 qm 命令建立 serial port，假设我的 VM ID 是 100 接着重开 VM，用 dmesg 确认是否有 ttyS 出現 OpenSuse修改 grub 配置 /etc/default/grub 的 GRUB_CMDLINE_LINUX 参数，添加 更新G...</description>
      <category>develop</category>
      <pubDate>Fri, 13 Sep 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2>关闭 VM，并给 VM 添加一个 serial port</h2>
<p>在 PVE Host 中用 qm 命令建立 serial port，假设我的 VM ID 是 100</p>
<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">qm <span class="token builtin class-name">set</span> <span class="token number">100</span> <span class="token parameter variable">-serial0</span> socket</span>
<span class="line"></span></code></pre>
</div><p>接着重开 VM，用 dmesg 确认是否有 ttyS 出現</p>
<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">dmesg</span> <span class="token operator">|</span> <span class="token function">grep</span> ttyS</span>
<span class="line"></span></code></pre>
</div><h2>OpenSuse修改 grub 配置</h2>
<p><code>/etc/default/grub</code> 的 <code>GRUB_CMDLINE_LINUX</code> 参数，添加</p>
<div class="language-text" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">console=tty0 console=ttyS0,115200</span>
<span class="line"></span></code></pre>
</div><p>更新Grub配置</p>
<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">grub2-mkconfig <span class="token parameter variable">--output</span><span class="token operator">=</span>/boot/grub2/grub.cfg</span>
<span class="line"></span></code></pre>
</div><p>重启OpenSuse虚拟机 检查 xterm.js 是否可用</p>
]]></content:encoded>
    </item>
    <item>
      <title>去除 PVE “无有效的订阅” 弹窗</title>
      <link>https://www.pysio.online/posts/develop/Remove%20Pve%20No%20valid%20subscription.html</link>
      <guid>https://www.pysio.online/posts/develop/Remove%20Pve%20No%20valid%20subscription.html</guid>
      <source url="https://www.pysio.online/rss.xml">去除 PVE “无有效的订阅” 弹窗</source>
      <description>修改 /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js 将 修改为 执行以下命令 重启PveProxy即可去除弹窗</description>
      <category>develop</category>
      <pubDate>Thu, 26 Sep 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>修改 <code>/usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js</code> 将</p>
<div class="language-javascript" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">Ext<span class="token punctuation">.</span>Msg<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line"></span></code></pre>
</div><p>修改为</p>
<div class="language-javascript" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">Ext<span class="token punctuation">.</span>Msg<span class="token punctuation">.</span><span class="token function">noshow</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line"></span></code></pre>
</div><p>执行以下命令 重启PveProxy即可去除弹窗</p>
<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">systemctl restart pveproxy</span>
<span class="line"></span></code></pre>
</div>]]></content:encoded>
    </item>
    <item>
      <title>OpenBmclapi</title>
      <link>https://www.pysio.online/posts/daily/OpenBmclapi.html</link>
      <guid>https://www.pysio.online/posts/daily/OpenBmclapi.html</guid>
      <source url="https://www.pysio.online/rss.xml">OpenBmclapi</source>
      <description>搭建这玩意也是一时兴起，想想也该给免费的镜像服务贡献点自己的力量。 网盘节点地址：https://65d480a1f25ffe347bdf6820.openbmclapi.933.moe/</description>
      <category>daily</category>
      <pubDate>Wed, 27 Mar 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>搭建这玩意也是一时兴起，想想也该给免费的镜像服务贡献点自己的力量。</p>
<p>网盘节点地址：https://65d480a1f25ffe347bdf6820.openbmclapi.933.moe/</p>
<!-- more -->
<figure><img src="https://files.pysio.online/Images/20241005133723.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
]]></content:encoded>
      <enclosure url="https://files.pysio.online/Images/20241005133723.png" type="image/png"/>
    </item>
    <item>
      <title>本地手动合并Github上的Pull requests</title>
      <link>https://www.pysio.online/posts/develop/Manual%20merge%20Pull%20requests.html</link>
      <guid>https://www.pysio.online/posts/develop/Manual%20merge%20Pull%20requests.html</guid>
      <source url="https://www.pysio.online/rss.xml">本地手动合并Github上的Pull requests</source>
      <description>首先 通过命令添加远程的仓库信息 仓库添加成功后 通过 git fetch [远程仓库名称] 把仓库拉到本地 最后通过 merge 或者 cherry-pick 合并整个分支或者某个具体的提交 当我们合并完成之后，清理远程仓库的信息</description>
      <category>develop</category>
      <pubDate>Thu, 26 Sep 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>首先 通过命令添加远程的仓库信息</p>
<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">git</span> remote <span class="token function">add</span> <span class="token punctuation">[</span>远程仓库名称<span class="token punctuation">]</span> <span class="token punctuation">[</span>远程仓库地址<span class="token punctuation">]</span> </span>
<span class="line"></span></code></pre>
</div><p>仓库添加成功后 通过 <code>git fetch [远程仓库名称]</code> 把仓库拉到本地</p>
<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">❯ <span class="token function">git</span> fetch pr2</span>
<span class="line">remote: Enumerating objects: <span class="token number">26</span>, done.</span>
<span class="line">remote: Counting objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">26</span>/26<span class="token punctuation">)</span>, done.</span>
<span class="line">remote: Compressing objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">9</span>/9<span class="token punctuation">)</span>, done.</span>
<span class="line">remote: Total <span class="token number">18</span> <span class="token punctuation">(</span>delta <span class="token number">8</span><span class="token punctuation">)</span>, reused <span class="token number">17</span> <span class="token punctuation">(</span>delta <span class="token number">7</span><span class="token punctuation">)</span>, pack-reused <span class="token number">0</span> <span class="token punctuation">(</span>from <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">展开对象中: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">18</span>/18<span class="token punctuation">)</span>, <span class="token number">3.26</span> KiB <span class="token operator">|</span> <span class="token number">371.00</span> KiB/s, 完成.</span>
<span class="line">来自 github.com:pysio2007/SkyBlock-CN-WIKI</span>
<span class="line"> * <span class="token punctuation">[</span>新分支<span class="token punctuation">]</span>          main       -<span class="token operator">&gt;</span> pr2/main</span>
<span class="line"></span></code></pre>
</div><p>最后通过 <code>merge</code> 或者 <code>cherry-pick</code> 合并整个分支或者某个具体的提交</p>
<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 合并具体的 commitid</span></span>
<span class="line">❯ <span class="token function">git</span> cherry-pick <span class="token punctuation">[</span>Commitid<span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 合并具体的分支</span></span>
<span class="line">❯ <span class="token function">git</span> merge <span class="token punctuation">[</span>远程仓库名称<span class="token punctuation">]</span>/<span class="token punctuation">[</span>分支名称<span class="token punctuation">]</span></span>
<span class="line"></span></code></pre>
</div><p>当我们合并完成之后，清理远程仓库的信息</p>
<div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">git</span> remote <span class="token function">rm</span> <span class="token punctuation">[</span>远程仓库名称<span class="token punctuation">]</span></span>
<span class="line"></span></code></pre>
</div>]]></content:encoded>
    </item>
  </channel>
</rss>