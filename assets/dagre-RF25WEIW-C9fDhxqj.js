import{m as e,t as n,bp as t,bq as r,bd as i,br as a,bj as d,be as o,bc as s,bs as l,bt as g,bu as c,bv as f,bw as u,bx as h,W as p}from"./mermaid.esm.min-DuAW2zmW.js";import{f as w}from"./chunk-FASC7IG4-BpF8Scjp.js";import{m as v}from"./chunk-ZN7TASNU-C7Ps9tB3.js";import{s as m,_ as y,J as X}from"./chunk-5ZJXQJOJ-BKxQ1lhf.js";import"./app-aWLgmIXj.js";function b(e){var n={options:{directed:e.isDirected(),multigraph:e.isMultigraph(),compound:e.isCompound()},nodes:N(e),edges:E(e)};return m(e.graph())||(n.value=y(e.graph())),n}function N(e){return X(e.nodes(),(function(n){var t=e.node(n),r=e.parent(n),i={v:n};return m(t)||(i.value=t),m(r)||(i.parent=r),i}))}function E(e){return X(e.edges(),(function(n){var t=e.edge(n),r={v:n.v,w:n.w};return m(n.name)||(r.name=n.name),m(t)||(r.value=t),r}))}e(b,"write"),e(N,"writeNodes"),e(E,"writeEdges");var C=new Map,x=new Map,S=new Map,I=e((()=>{x.clear(),S.clear(),C.clear()}),"clear"),D=e(((e,t)=>{let r=x.get(t)||[];return n.trace("In isDescendant",t," ",e," = ",r.includes(e)),r.includes(e)}),"isDescendant"),O=e(((e,t)=>{let r=x.get(t)||[];return n.info("Descendants of ",t," is ",r),n.info("Edge is ",e),e.v!==t&&e.w!==t&&(r?r.includes(e.v)||D(e.v,t)||D(e.w,t)||r.includes(e.w):(n.debug("Tilt, ",t,",not in descendants"),!1))}),"edgeInCluster"),k=e(((e,t,r,i)=>{n.warn("Copying children of ",e,"root",i,"data",t.node(e),i);let a=t.children(e)||[];e!==i&&a.push(e),n.warn("Copying (nodes) clusterId",e,"nodes",a),a.forEach((a=>{if(t.children(a).length>0)k(a,t,r,i);else{let d=t.node(a);n.info("cp ",a," to ",i," with parent ",e),r.setNode(a,d),i!==t.parent(a)&&(n.warn("Setting parent",a,t.parent(a)),r.setParent(a,t.parent(a))),e!==i&&a!==e?(n.debug("Setting parent",a,e),r.setParent(a,e)):(n.info("In copy ",e,"root",i,"data",t.node(e),i),n.debug("Not Setting parent for node=",a,"cluster!==rootId",e!==i,"node!==clusterId",a!==e));let o=t.edges(a);n.debug("Copying Edges",o),o.forEach((a=>{n.info("Edge",a);let d=t.edge(a.v,a.w,a.name);n.info("Edge data",d,i);try{O(a,i)?(n.info("Copying as ",a.v,a.w,d,a.name),r.setEdge(a.v,a.w,d,a.name),n.info("newGraph edges ",r.edges(),r.edge(r.edges()[0]))):n.info("Skipping copy of edge ",a.v,"--\x3e",a.w," rootId: ",i," clusterId:",e)}catch(o){n.error(o)}}))}n.debug("Removing node",a),t.removeNode(a)}))}),"copy"),J=e(((e,n)=>{let t=n.children(e),r=[...t];for(let i of t)S.set(i,e),r=[...r,...J(i,n)];return r}),"extractDescendants"),G=e(((e,n,t)=>{let r=e.edges().filter((e=>e.v===n||e.w===n)),i=e.edges().filter((e=>e.v===t||e.w===t)),a=r.map((e=>({v:e.v===n?t:e.v,w:e.w===n?n:e.w}))),d=i.map((e=>({v:e.v,w:e.w})));return a.filter((e=>d.some((n=>e.v===n.v&&e.w===n.w))))}),"findCommonEdges"),A=e(((e,t,r)=>{let i,a=t.children(e);if(n.trace("Searching children of id ",e,a),a.length<1)return e;for(let n of a){let e=A(n,t,r),a=G(t,r,e);if(e){if(!(a.length>0))return e;i=e}}return i}),"findNonClusterChild"),P=e((e=>C.has(e)&&C.get(e).externalConnections&&C.has(e)?C.get(e).id:e),"getAnchorId"),B=e(((e,t)=>{if(!e||t>10)n.debug("Opting out, no graph ");else{n.debug("Opting in, graph "),e.nodes().forEach((function(t){e.children(t).length>0&&(n.warn("Cluster identified",t," Replacement id in edges: ",A(t,e,t)),x.set(t,J(t,e)),C.set(t,{id:A(t,e,t),clusterData:e.node(t)}))})),e.nodes().forEach((function(t){let r=e.children(t),i=e.edges();r.length>0?(n.debug("Cluster identified",t,x),i.forEach((e=>{D(e.v,t)^D(e.w,t)&&(n.warn("Edge: ",e," leaves cluster ",t),n.warn("Descendants of XXX ",t,": ",x.get(t)),C.get(t).externalConnections=!0)}))):n.debug("Not a cluster ",t,x)}));for(let n of C.keys()){let t=C.get(n).id,r=e.parent(t);r!==n&&C.has(r)&&!C.get(r).externalConnections&&(C.get(n).id=r)}e.edges().forEach((function(t){let r=e.edge(t);n.warn("Edge "+t.v+" -> "+t.w+": "+JSON.stringify(t)),n.warn("Edge "+t.v+" -> "+t.w+": "+JSON.stringify(e.edge(t)));let i=t.v,a=t.w;if(n.warn("Fix XXX",C,"ids:",t.v,t.w,"Translating: ",C.get(t.v)," --- ",C.get(t.w)),C.get(t.v)||C.get(t.w)){if(n.warn("Fixing and trying - removing XXX",t.v,t.w,t.name),i=P(t.v),a=P(t.w),e.removeEdge(t.v,t.w,t.name),i!==t.v){let n=e.parent(i);C.get(n).externalConnections=!0,r.fromCluster=t.v}if(a!==t.w){let n=e.parent(a);C.get(n).externalConnections=!0,r.toCluster=t.w}n.warn("Fix Replacing with XXX",i,a,t.name),e.setEdge(i,a,r,t.name)}})),n.warn("Adjusted Graph",b(e)),R(e,0),n.trace(C)}}),"adjustClustersAndEdges"),R=e(((e,t)=>{var r,i;if(n.warn("extractor - ",t,b(e),e.children("D")),t>10)return void n.error("Bailing out");let a=e.nodes(),d=!1;for(let n of a){let t=e.children(n);d=d||t.length>0}if(d){n.debug("Nodes = ",a,t);for(let d of a)if(n.debug("Extracting node",d,C,C.has(d)&&!C.get(d).externalConnections,!e.parent(d),e.node(d),e.children("D")," Depth ",t),C.has(d))if(!C.get(d).externalConnections&&e.children(d)&&e.children(d).length>0){n.warn("Cluster without external connections, without a parent and with children",d,t);let a="TB"===e.graph().rankdir?"LR":"TB";(null==(i=null==(r=C.get(d))?void 0:r.clusterData)?void 0:i.dir)&&(a=C.get(d).clusterData.dir,n.warn("Fixing dir",C.get(d).clusterData.dir,a));let o=new v({multigraph:!0,compound:!0}).setGraph({rankdir:a,nodesep:50,ranksep:50,marginx:8,marginy:8}).setDefaultEdgeLabel((function(){return{}}));n.warn("Old graph before copy",b(e)),k(d,e,o,d),e.setNode(d,{clusterNode:!0,id:d,clusterData:C.get(d).clusterData,label:C.get(d).label,graph:o}),n.warn("New graph after copy node: (",d,")",b(o)),n.debug("Old graph after copy",b(e))}else n.warn("Cluster ** ",d," **not meeting the criteria !externalConnections:",!C.get(d).externalConnections," no parent: ",!e.parent(d)," children ",e.children(d)&&e.children(d).length>0,e.children("D"),t),n.debug(C);else n.debug("Not a cluster",d,t);a=e.nodes(),n.warn("New list of nodes",a);for(let r of a){let i=e.node(r);n.warn(" Now next level",r,i),(null==i?void 0:i.clusterNode)&&R(i.graph,t+1)}}else n.debug("Done, no node has children",e.nodes())}),"extractor"),T=e(((e,n)=>{if(0===n.length)return[];let t=Object.assign([],n);return n.forEach((n=>{let r=e.children(n),i=T(e,r);t=[...t,...i]})),t}),"sorter"),j=e((e=>T(e,e.children())),"sortNodesByHierarchy"),F=e((async(c,f,u,h,p,v)=>{n.warn("Graph in recursive render:XAX",b(f),p);let m=f.graph().rankdir;n.trace("Dir in recursive render - dir:",m);let y=c.insert("g").attr("class","root");f.nodes()?n.info("Recursive render XXX",f.nodes()):n.info("No nodes found for",f),f.edges().length>0&&n.info("Recursive edges",f.edge(f.edges()[0]));let X=y.insert("g").attr("class","clusters"),N=y.insert("g").attr("class","edgePaths"),E=y.insert("g").attr("class","edgeLabels"),x=y.insert("g").attr("class","nodes");await Promise.all(f.nodes().map((async function(e){let a=f.node(e);if(void 0!==p){let t=JSON.parse(JSON.stringify(p.clusterData));n.trace("Setting data for parent cluster XXX\n Node.id = ",e,"\n data=",t.height,"\nParent cluster",p.height),f.setNode(p.id,t),f.parent(e)||(n.trace("Setting parent",e,p.id),f.setParent(e,p.id,t))}if(n.info("(Insert) Node XXX"+e+": "+JSON.stringify(f.node(e))),null==a?void 0:a.clusterNode){n.info("Cluster identified XBX",e,a.width,f.node(e));let{ranksep:i,nodesep:d}=f.graph();a.graph.setGraph({...a.graph.graph(),ranksep:i+25,nodesep:d});let o=await F(x,a.graph,u,h,f.node(e),v),s=o.elem;t(a,s),a.diff=o.diff||0,n.info("New compound node after recursive render XAX",e,"width",a.width,"height",a.height),r(s,a)}else f.children(e).length>0?(n.trace("Cluster - the non recursive path XBX",e,a.id,a,a.width,"Graph:",f),n.trace(A(a.id,f)),C.set(a.id,{id:A(a.id,f),node:a})):(n.trace("Node - the non recursive path XAX",e,x,f.node(e),m),await i(x,f.node(e),{config:v,dir:m}))}))),await e((async()=>{let e=f.edges().map((async function(e){let t=f.edge(e.v,e.w,e.name);n.info("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(e)),n.info("Edge "+e.v+" -> "+e.w+": ",e," ",JSON.stringify(f.edge(e))),n.info("Fix",C,"ids:",e.v,e.w,"Translating: ",C.get(e.v),C.get(e.w)),await a(E,t)}));await Promise.all(e)}),"processEdges")(),n.info("Graph before layout:",JSON.stringify(b(f))),n.info("############################################# XXX"),n.info("###                Layout                 ### XXX"),n.info("############################################# XXX"),w(f),n.info("Graph after layout:",JSON.stringify(b(f)));let S=0,{subGraphTitleTotalMargin:I}=d(v);return await Promise.all(j(f).map((async function(e){var t;let r=f.node(e);if(n.info("Position XBX => "+e+": ("+r.x,","+r.y,") width: ",r.width," height: ",r.height),null==r?void 0:r.clusterNode)r.y+=I,n.info("A tainted cluster node XBX1",e,r.id,r.width,r.height,r.x,r.y,f.parent(e)),C.get(r.id).node=r,o(r);else if(f.children(e).length>0){n.info("A pure cluster node XBX1",e,r.id,r.x,r.y,r.width,r.height,f.parent(e)),r.height+=I,f.node(r.parentId);let i=(null==r?void 0:r.padding)/2||0,a=(null==(t=null==r?void 0:r.labelBBox)?void 0:t.height)||0,d=a-i||0;n.debug("OffsetY",d,"labelHeight",a,"halfPadding",i),await s(X,r),C.get(r.id).node=r}else{let e=f.node(r.parentId);r.y+=I/2,n.info("A regular node XBX1 - using the padding",r.id,"parent",r.parentId,r.width,r.height,r.x,r.y,"offsetY",r.offsetY,"parent",e,null==e?void 0:e.offsetY,r),o(r)}}))),f.edges().forEach((function(e){let t=f.edge(e);n.info("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(t),t),t.points.forEach((e=>e.y+=I/2));let r=f.node(e.v);var i=f.node(e.w);let a=l(N,t,C,u,r,i,h);g(t,a)})),f.nodes().forEach((function(e){let t=f.node(e);n.info(e,t.type,t.diff),t.isGroup&&(S=t.diff)})),n.warn("Returning from recursive render XAX",y,S),{elem:y,diff:S}}),"recursiveRender"),L=e((async(e,t)=>{var r,i,a,d,o,s;let l=new v({multigraph:!0,compound:!0}).setGraph({rankdir:e.direction,nodesep:(null==(r=e.config)?void 0:r.nodeSpacing)||(null==(a=null==(i=e.config)?void 0:i.flowchart)?void 0:a.nodeSpacing)||e.nodeSpacing,ranksep:(null==(d=e.config)?void 0:d.rankSpacing)||(null==(s=null==(o=e.config)?void 0:o.flowchart)?void 0:s.rankSpacing)||e.rankSpacing,marginx:8,marginy:8}).setDefaultEdgeLabel((function(){return{}})),g=t.select("g");c(g,e.markers,e.type,e.diagramId),f(),u(),h(),I(),e.nodes.forEach((e=>{l.setNode(e.id,{...e}),e.parentId&&l.setParent(e.id,e.parentId)})),n.debug("Edges:",e.edges),e.edges.forEach((e=>{if(e.start===e.end){let n=e.start,t=n+"---"+n+"---1",r=n+"---"+n+"---2",i=l.node(n);l.setNode(t,{domId:t,id:t,parentId:i.parentId,labelStyle:"",label:"",padding:0,shape:"labelRect",style:"",width:10,height:10}),l.setParent(t,i.parentId),l.setNode(r,{domId:r,id:r,parentId:i.parentId,labelStyle:"",padding:0,shape:"labelRect",label:"",style:"",width:10,height:10}),l.setParent(r,i.parentId);let a=structuredClone(e),d=structuredClone(e),o=structuredClone(e);a.label="",a.arrowTypeEnd="none",a.id=n+"-cyclic-special-1",d.arrowTypeEnd="none",d.id=n+"-cyclic-special-mid",o.label="",i.isGroup&&(a.fromCluster=n,o.toCluster=n),o.id=n+"-cyclic-special-2",l.setEdge(n,t,a,n+"-cyclic-special-0"),l.setEdge(t,r,d,n+"-cyclic-special-1"),l.setEdge(r,n,o,n+"-cyc<lic-special-2")}else l.setEdge(e.start,e.end,{...e},e.id)})),n.warn("Graph at first:",JSON.stringify(b(l))),B(l),n.warn("Graph after XAX:",JSON.stringify(b(l)));let w=p();await F(g,l,e.type,e.diagramId,void 0,w)}),"render");export{L as render};