import{c as t}from"./chunk-4KE642ED-CEH_xXa3.js";import{p as e}from"./gitGraph-YCYPL57B-MEVJTYR7-B3PxZq--.js";import{ar as a,m as r,as as l,at as o,h as n,t as i,aT as s,C as d,T as c,k as p,w as k,B as b,v as g,S as h}from"./mermaid.esm.min-wXhOS7Ee.js";import"./chunk-5ZJXQJOJ-B2J_p7to.js";import"./app-DxyKUYci.js";var f={packet:[]},m=structuredClone(f),u=a.packet,x=r((()=>{let t=l({...u,...o().packet});return t.showBits&&(t.paddingY+=10),t}),"getConfig"),w=r((()=>m.packet),"getPacket"),$={pushWord:r((t=>{t.length>0&&m.packet.push(t)}),"pushWord"),getPacket:w,getConfig:x,clear:r((()=>{n(),m=structuredClone(f)}),"clear"),setAccTitle:c,getAccTitle:p,setDiagramTitle:k,getDiagramTitle:b,getAccDescription:g,setAccDescription:h},C=r((e=>{t(e,$);let a=-1,r=[],l=1,{bitsPerRow:o}=$.getConfig();for(let{start:t,end:n,label:s}of e.blocks){if(n&&n<t)throw new Error(`Packet block ${t} - ${n} is invalid. End must be greater than start.`);if(t!==a+1)throw new Error(`Packet block ${t} - ${n??t} is not contiguous. It should start from ${a+1}.`);for(a=n??t,i.debug(`Packet block ${t} - ${a} with label ${s}`);r.length<=o+1&&$.getPacket().length<1e4;){let[e,a]=y({start:t,end:n,label:s},l,o);if(r.push(e),e.end+1===l*o&&($.pushWord(r),r=[],l++),!a)break;({start:t,end:n,label:s}=a)}}$.pushWord(r)}),"populate"),y=r(((t,e,a)=>{if(void 0===t.end&&(t.end=t.start),t.start>t.end)throw new Error(`Block start ${t.start} is greater than block end ${t.end}.`);return t.end+1<=e*a?[t,void 0]:[{start:t.start,end:e*a-1,label:t.label},{start:e*a,end:t.end,label:t.label}]}),"getNextFittingBlock"),B={parse:r((async t=>{let a=await e("packet",t);i.debug(a),C(a)}),"parse")},P=r(((t,e,a,r)=>{let l=r.db,o=l.getConfig(),{rowHeight:n,paddingY:i,bitWidth:c,bitsPerRow:p}=o,k=l.getPacket(),b=l.getDiagramTitle(),g=n+i,h=g*(k.length+1)-(b?0:n),f=c*p+2,m=s(e);m.attr("viewbox",`0 0 ${f} ${h}`),d(m,h,f,o.useMaxWidth);for(let[s,d]of k.entries())S(m,d,s,o);m.append("text").text(b).attr("x",f/2).attr("y",h-g/2).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","packetTitle")}),"draw"),S=r(((t,e,a,{rowHeight:r,paddingX:l,paddingY:o,bitWidth:n,bitsPerRow:i,showBits:s})=>{let d=t.append("g"),c=a*(r+o)+o;for(let p of e){let t=p.start%i*n+1,e=(p.end-p.start+1)*n-l;if(d.append("rect").attr("x",t).attr("y",c).attr("width",e).attr("height",r).attr("class","packetBlock"),d.append("text").attr("x",t+e/2).attr("y",c+r/2).attr("class","packetLabel").attr("dominant-baseline","middle").attr("text-anchor","middle").text(p.label),!s)continue;let a=p.end===p.start,o=c-2;d.append("text").attr("x",t+(a?e/2:0)).attr("y",o).attr("class","packetByte start").attr("dominant-baseline","auto").attr("text-anchor",a?"middle":"start").text(p.start),a||d.append("text").attr("x",t+e).attr("y",o).attr("class","packetByte end").attr("dominant-baseline","auto").attr("text-anchor","end").text(p.end)}}),"drawWord"),T={draw:P},W={byteFontSize:"10px",startByteColor:"black",endByteColor:"black",labelColor:"black",labelFontSize:"12px",titleColor:"black",titleFontSize:"14px",blockStrokeColor:"black",blockStrokeWidth:"1",blockFillColor:"#efefef"},z=r((({packet:t}={})=>{let e=l(W,t);return`\n\t.packetByte {\n\t\tfont-size: ${e.byteFontSize};\n\t}\n\t.packetByte.start {\n\t\tfill: ${e.startByteColor};\n\t}\n\t.packetByte.end {\n\t\tfill: ${e.endByteColor};\n\t}\n\t.packetLabel {\n\t\tfill: ${e.labelColor};\n\t\tfont-size: ${e.labelFontSize};\n\t}\n\t.packetTitle {\n\t\tfill: ${e.titleColor};\n\t\tfont-size: ${e.titleFontSize};\n\t}\n\t.packetBlock {\n\t\tstroke: ${e.blockStrokeColor};\n\t\tstroke-width: ${e.blockStrokeWidth};\n\t\tfill: ${e.blockFillColor};\n\t}\n\t`}),"styles"),F={parser:B,db:$,renderer:T,styles:z};export{F as diagram};