import{_ as a,c as n,e as s,o as t}from"./app-Bn-fjrJr.js";const p={};function i(r,e){return t(),n("div",null,[...e[0]||(e[0]=[s(`<h2 id="_1-哥们-你的下一跳怎么是上游" tabindex="-1"><a class="header-anchor" href="#_1-哥们-你的下一跳怎么是上游"><span>1. 哥们 你的下一跳怎么是上游</span></a></h2><p><a href="https://pysio.blog/notes/a7u2jlwwrd490031" target="_blank" rel="noopener noreferrer">2025/5/15 原始帖子</a></p><p>在群友帮AS208754琢磨了2后，发现他的下一条竟然是上游！</p><div class="language-text" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line"> 我这个前缀为什么没有导出到上游啊, 上游  Import 0</span>
<span class="line"> 群友: 你实在不行  all  以下试一试 </span>
<span class="line"> 好</span>
<span class="line"> 上游:  Import 0</span>
<span class="line"> 群友: 起了怪了 你试一试xxxx</span>
<span class="line"></span></code></pre></div><p>结果他的Bird Config是这样的：</p><div class="language-conf" data-highlighter="prismjs" data-ext="conf"><pre><code class="language-conf"><span class="line">protocol static {</span>
<span class="line">    ipv6;</span>
<span class="line">    route 打马::/44 via fd00:2::1</span>
<span class="line">}</span>
<span class="line"></span></code></pre></div><p>好的 让我们来解释以下发生了什么:</p><p>在这个 BGP 会话中 <code>fd00:2::1</code> 是上游的地址，很明显他静态指定了下一跳的路由为上游地址，这样就造成了环路 Bird 当然罢工啦！</p><h2 id="_2-巨量撤回更新" tabindex="-1"><a class="header-anchor" href="#_2-巨量撤回更新"><span>2. 巨量撤回更新</span></a></h2><p><a href="https://pysio.blog/notes/a81vh2qounpi0033" target="_blank" rel="noopener noreferrer">2025/5/22 原始帖子</a></p><p>因为BuyVM的抽象LU网络 导致了巨量的撤回更新，如下文:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">    Routes:         <span class="token number">1</span> imported, <span class="token number">213789</span> exported, <span class="token number">1</span> preferred</span>
<span class="line">    Route change stats:     received   rejected   filtered    ignored   accepted</span>
<span class="line">      Import updates:           <span class="token number">6295</span>          <span class="token number">0</span>          <span class="token number">0</span>          <span class="token number">5</span>       <span class="token number">6290</span></span>
<span class="line">      Import withdraws:            <span class="token number">0</span>          <span class="token number">0</span>        ---          <span class="token number">0</span>       <span class="token number">6289</span></span>
<span class="line">      Export updates:     <span class="token number">1340353503</span>      <span class="token number">12530</span>      <span class="token number">19382</span>        --- <span class="token number">1340321591</span></span>
<span class="line">      Export withdraws:        <span class="token number">16719</span>        ---        ---        ---       <span class="token number">9950</span></span>
<span class="line"></span></code></pre></div><h2 id="_3-dn42-ip麦当劳随心配" tabindex="-1"><a class="header-anchor" href="#_3-dn42-ip麦当劳随心配"><span>3. DN42 IP麦当劳随心配</span></a></h2><p><a href="https://pysio.blog/notes/a8346q5ounpi004y" target="_blank" rel="noopener noreferrer">2025/5/22 原始帖子</a></p><p>群内 大伙在帮 @Alice_8585@baka.ink 琢磨他的BGP配置为什么没有正确导出IPv4前缀的时候 看到了如此的WireGuard配置:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token number">3</span>: pyiso: <span class="token operator">&lt;</span>POINTOPOINT,NOARP,UP,LOWER_UP<span class="token operator">&gt;</span> mtu <span class="token number">1420</span> qdisc noqueue state UNKNOWN group default qlen <span class="token number">1000</span></span>
<span class="line">    link/none</span>
<span class="line">    inet <span class="token number">172.20</span>.44.131 peer <span class="token number">172.20</span>.183.3/32 scope global pyiso</span>
<span class="line">       valid_lft forever preferred_lft forever</span>
<span class="line">    inet6 fe80::440/64 scope <span class="token function">link</span></span>
<span class="line">       valid_lft forever preferred_lft forever</span>
<span class="line"><span class="token number">4</span>: lezi: <span class="token operator">&lt;</span>POINTOPOINT,NOARP,UP,LOWER_UP<span class="token operator">&gt;</span> mtu <span class="token number">1420</span> qdisc noqueue state UNKNOWN group default qlen <span class="token number">1000</span></span>
<span class="line">    link/none</span>
<span class="line">    inet <span class="token number">172.20</span>.44.132 peer <span class="token number">172.22</span>.137.99/32 scope global lezi</span>
<span class="line">       valid_lft forever preferred_lft forever</span>
<span class="line">    inet6 fe80::387/64 scope <span class="token function">link</span></span>
<span class="line">       valid_lft forever preferred_lft forever</span>
<span class="line"></span></code></pre></div><p>大伙发现哪里出现了问题吗？ 对啦！他给不同的WireGuard隧道配置了不同的IP地址，这在DN42当中是不被允许的。。</p><details class="hint-container details"><summary>附上STE的一篇帖子</summary><p>你的意思是，我们ping不通，一边一遍遍检查birdc，bird.conf，BGP状态，都快怀疑你那边网络是不是宇宙射线持续照射翻转了bit导致数据包爆炸，而你那边的WireGuard peer填了一个随机IP？</p><p>你的意思是，BIRD 配置里邻居地址写着一个IP地址，WireGuard配置里又是另一个，另一个接口上挂着的又是另一个，然后你说辙没什么问题，让我们debug的时候像在猜灯谜？</p><p>你的意思是，你把wireguard的隧道当成了迷宫玩？让我们连 traceroute 都像是在探测未知宇宙？</p><p>这不是一般的隧道了，是随机地址生成器，IETF 来了都解释不了为啥你 BGP 起不来。</p><p>8585的 WireGuard 接口、配置文件和 BIRD 的邻居 IP 配置，三者使用了三个不同的 IP，这是我们排查网络联通问题时耽误大量时间的主要原因。</p><p>VPN 尤其是 WireGuard 这种P2P协议，对双方 IP 的一致性要求是非常严格的。它不像普通的以太网那样靠广播来兜底，IP 配错就等于彻底断链，后面的任何调优都是徒劳。</p><p>建议今后配置 VPN 和 BIRD 相关的接口地址时，将所有详细信息paste到某个网站上，以此大大节省排障成本。</p><p>互联网真是太好玩了</p></details><h2 id="_4-wireguard-在睡觉" tabindex="-1"><a class="header-anchor" href="#_4-wireguard-在睡觉"><span>4. WireGuard 在睡觉！</span></a></h2><p><a href="https://pysio.blog/notes/a839ueoounpi005f" target="_blank" rel="noopener noreferrer">2025/5/23 原始帖子</a></p><p>没错 在我们研究了半个小时为什么WireGuard隧道不通的时候，随手的一个Ping 发现能ping通。。。</p><p>这件事情告诉我们不要看WireGuard的last handshake来判断是否握手 因为很有可能他在偷懒。</p><p>你随便发个数据包他就开始干活了 非常神奇</p><h2 id="_5-哥们-你的route6呢" tabindex="-1"><a class="header-anchor" href="#_5-哥们-你的route6呢"><span>5. 哥们，你的route6呢？</span></a></h2><p>还是AS208754，在发现自己的/48段ping不通后来群里求助</p><div class="language-text" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line"> 111我这个/48怎么全国ping不通啊是不是被gfw墙了</span>
<span class="line"> 群友: 你是干了什么伤天害理的事情让gfw墙你/48</span>
<span class="line"> 那怪了</span>
<span class="line"> （长时间的调试）</span>
<span class="line"> 上游:  Import 0</span>
<span class="line"> 上游：你route6呢？</span>
<span class="line"></span></code></pre></div><p>经过群友的解释，原来当天只给/48配了rdns没配route6，过滤器一看蒙圈了，所以被filter了。</p><p>这件事告诉我们什么，在配东西之前一定要看仔细，核对好了再整，不要盲目的就直接进生产环境。</p><h2 id="_6-哥们-你的peer的公钥怎么是你自己" tabindex="-1"><a class="header-anchor" href="#_6-哥们-你的peer的公钥怎么是你自己"><span>6. 哥们，你的peer的公钥怎么是你自己</span></a></h2><p>群里，我们的alice_8585正在挠头为什么自己的机器的peer消失了</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">interface: aliyun</span>
<span class="line">  public key: xzkuXcNX20wQpa/03pUNXJplHaENw2IrBc1VpLBf3RQ<span class="token operator">=</span></span>
<span class="line">  private key: <span class="token punctuation">(</span>hidden<span class="token punctuation">)</span></span>
<span class="line">  listening port: <span class="token number">722</span></span>
<span class="line"></span></code></pre></div><p>而这是他的配置文件</p><div class="language-text" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">[Interface]</span>
<span class="line">PrivateKey = 隐私部分</span>
<span class="line">ListenPort = 00722</span>
<span class="line">Table = off</span>
<span class="line">PostUp = ip addr add fe80::1:0387/64 dev %i</span>
<span class="line">PostUp = ip addr add fd37:cc8c:837f::3/128 dev %i</span>
<span class="line">PostUp = ip addr add 172.20.44.131 peer 172.20.44.130 dev %i</span>
<span class="line">PostUp = sysctl -w net.ipv6.conf.%i.autoconf=0</span>
<span class="line"></span>
<span class="line">[Peer]</span>
<span class="line">PublicKey = xzkuXcNX20wQpa/03pUNXJplHaENw2IrBc1VpLBf3RQ=</span>
<span class="line">Endpoint = 隐私部分</span>
<span class="line">PersistentKeepalive = 15</span>
<span class="line">AllowedIPs = 172.20.0.0/14, 10.0.0.0/8,fd00::/8, fe80::/64,ff00::/8</span>
<span class="line"></span></code></pre></div><p>请问各位发现问题是啥了吗 当事人将对面机器公钥写成了这台机器的公钥 但是我们的wg的检测只会检测是不是合法公钥而不会检测是不是同一个，所以peer消失了</p><p>这件事告诉了我们 复制东西要仔细看</p>`,35)])])}const o=a(p,[["render",i]]),c=JSON.parse(`{"path":"/posts/daily/AKIXAccident.html","title":"AKIX 事故合订本","lang":"zh-CN","frontmatter":{"title":"AKIX 事故合订本","date":"2025-05-26T00:00:00.000Z","icon":"fa-kit fa-wireshark","category":"daily","tag":["BGP","日常"],"description":"1. 哥们 你的下一跳怎么是上游 2025/5/15 原始帖子 在群友帮AS208754琢磨了2后，发现他的下一条竟然是上游！ 结果他的Bird Config是这样的： 好的 让我们来解释以下发生了什么: 在这个 BGP 会话中 fd00:2::1 是上游的地址，很明显他静态指定了下一跳的路由为上游地址，这样就造成了环路 Bird 当然罢工啦！ 2. ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AKIX 事故合订本\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-05-26T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-22T16:06:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Pysio\\",\\"url\\":\\"https://github.com/pysio2007/\\"}]}"],["meta",{"property":"og:url","content":"https://www.pysio.online/posts/daily/AKIXAccident.html"}],["meta",{"property":"og:site_name","content":"Pysio's Home"}],["meta",{"property":"og:title","content":"AKIX 事故合订本"}],["meta",{"property":"og:description","content":"1. 哥们 你的下一跳怎么是上游 2025/5/15 原始帖子 在群友帮AS208754琢磨了2后，发现他的下一条竟然是上游！ 结果他的Bird Config是这样的： 好的 让我们来解释以下发生了什么: 在这个 BGP 会话中 fd00:2::1 是上游的地址，很明显他静态指定了下一跳的路由为上游地址，这样就造成了环路 Bird 当然罢工啦！ 2. ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-09-22T16:06:05.000Z"}],["meta",{"property":"article:tag","content":"日常"}],["meta",{"property":"article:tag","content":"BGP"}],["meta",{"property":"article:published_time","content":"2025-05-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-22T16:06:05.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://www.pysio.online/en/posts/daily/AKIXAccident.html"}],["meta",{"property":"article:published_time","content":"2025-05-26T00:00:00.000Z"}],["meta",{"name":"article:published_time","content":"2025-05-26T00:00:00.000Z"}],["meta",{"property":"article:tag","content":"BGP"}],["meta",{"property":"article:tag","content":"日常"}],["meta",{"property":"article:section","content":"daily"}],["meta",{"property":"og:title","content":"AKIX 事故合订本"}],["meta",{"property":"og:url","content":"https://www.pysio.online/posts/daily/AKIXAccident.html"}],["meta",{"property":"og:description","content":"1. 哥们 你的下一跳怎么是上游 2025/5/15 原始帖子 在群友帮AS208754琢磨了2后，发现他的下一条竟然是上游！ 结果他的Bird Config是这样的： 好的 让我们来解释以下发生了什么: 在这个 BGP 会话中 fd00:2::1 是上游的地址，很明显他静态指定了下一跳的路由为上游地址，这样就造成了环路 Bird 当然罢工啦！ 2. ..."}],["meta",{"name":"description","content":"1. 哥们 你的下一跳怎么是上游 2025/5/15 原始帖子 在群友帮AS208754琢磨了2后，发现他的下一条竟然是上游！ 结果他的Bird Config是这样的： 好的 让我们来解释以下发生了什么: 在这个 BGP 会话中 fd00:2::1 是上游的地址，很明显他静态指定了下一跳的路由为上游地址，这样就造成了环路 Bird 当然罢工啦！ 2. ..."}],["meta",{"name":"twitter:title","content":"AKIX 事故合订本"}],["meta",{"name":"twitter:description","content":"1. 哥们 你的下一跳怎么是上游 2025/5/15 原始帖子 在群友帮AS208754琢磨了2后，发现他的下一条竟然是上游！ 结果他的Bird Config是这样的： 好的 让我们来解释以下发生了什么: 在这个 BGP 会话中 fd00:2::1 是上游的地址，很明显他静态指定了下一跳的路由为上游地址，这样就造成了环路 Bird 当然罢工啦！ 2. ..."}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"BlogPosting\\",\\"headline\\":\\"AKIX 事故合订本\\",\\"author\\":{\\"@type\\":\\"Person\\",\\"name\\":\\"Pysio\\",\\"url\\":\\"https://github.com/pysio2007\\"},\\"publisher\\":{\\"@type\\":\\"Organization\\",\\"name\\":\\"Pysio's Home\\",\\"url\\":\\"https://www.pysio.online\\"},\\"url\\":\\"https://www.pysio.online/posts/daily/AKIXAccident.html\\",\\"datePublished\\":\\"2025-05-26T00:00:00.000Z\\",\\"dateModified\\":\\"2025-05-26T00:00:00.000Z\\",\\"description\\":\\"1. 哥们 你的下一跳怎么是上游 2025/5/15 原始帖子 在群友帮AS208754琢磨了2后，发现他的下一条竟然是上游！ 结果他的Bird Config是这样的： 好的 让我们来解释以下发生了什么: 在这个 BGP 会话中 fd00:2::1 是上游的地址，很明显他静态指定了下一跳的路由为上游地址，这样就造成了环路 Bird 当然罢工啦！ 2. ...\\",\\"mainEntityOfPage\\":{\\"@type\\":\\"WebPage\\",\\"@id\\":\\"https://www.pysio.online/posts/daily/AKIXAccident.html\\"}}"],["link",{"rel":"canonical","href":"https://www.pysio.online/posts/daily/AKIXAccident.html"}],["link",{"rel":"alternate","type":"application/rss+xml","title":"Pysio's Home RSS Feed","href":"https://www.pysio.online/rss.xml"}],["meta",{"property":"og:title","content":"AKIX 事故合订本"}],["meta",{"property":"og:description","content":"1. 哥们 你的下一跳怎么是上游 2025/5/15 原始帖子 在群友帮AS208754琢磨了2后，发现他的下一条竟然是上游！ 结果他的Bird Config是这样的： 好的 让我们来解释以下发生了什么: 在这个 BGP 会话中 fd00:2::1 是上游的地址，很明显他静态指定了下一跳的路由为上游地址，这样就造成了环路 Bird 当然罢工啦！ 2. ..."}],["meta",{"property":"og:image","content":"https://www.pysio.online/og-images/akix事故合订本.png"}],["meta",{"property":"og:url","content":"https://www.pysio.online/posts/daily/AKIXAccident.html"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:site_name","content":"Pysio's Home"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:title","content":"AKIX 事故合订本"}],["meta",{"name":"twitter:description","content":"1. 哥们 你的下一跳怎么是上游 2025/5/15 原始帖子 在群友帮AS208754琢磨了2后，发现他的下一条竟然是上游！ 结果他的Bird Config是这样的： 好的 让我们来解释以下发生了什么: 在这个 BGP 会话中 fd00:2::1 是上游的地址，很明显他静态指定了下一跳的路由为上游地址，这样就造成了环路 Bird 当然罢工啦！ 2. ..."}],["meta",{"name":"twitter:image","content":"https://www.pysio.online/og-images/akix事故合订本.png"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://www.pysio.online/rss.xml","title":"Pysio's Home RSS Feed"}]]},"git":{"createdTime":1748206142000,"updatedTime":1758557165000,"contributors":[{"name":"pysio2007","username":"pysio2007","email":"71202163+pysio2007@users.noreply.github.com","commits":2,"url":"https://github.com/pysio2007"},{"name":"9Bakabaka","username":"9Bakabaka","email":"140469824+9Bakabaka@users.noreply.github.com","commits":1,"url":"https://github.com/9Bakabaka"},{"name":"2623684696","username":"2623684696","email":"81961962+2623684696@users.noreply.github.com","commits":1,"url":"https://github.com/2623684696"}]},"readingTime":{"minutes":4.27,"words":1282},"filePathRelative":"posts/daily/AKIXAccident.md","excerpt":"<h2>1. 哥们 你的下一跳怎么是上游</h2>\\n<p><a href=\\"https://pysio.blog/notes/a7u2jlwwrd490031\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">2025/5/15 原始帖子</a></p>\\n<p>在群友帮AS208754琢磨了2后，发现他的下一条竟然是上游！</p>\\n<div class=\\"language-text\\" data-highlighter=\\"prismjs\\" data-ext=\\"text\\"><pre><code class=\\"language-text\\"><span class=\\"line\\"> 我这个前缀为什么没有导出到上游啊, 上游  Import 0</span>\\n<span class=\\"line\\"> 群友: 你实在不行  all  以下试一试 </span>\\n<span class=\\"line\\"> 好</span>\\n<span class=\\"line\\"> 上游:  Import 0</span>\\n<span class=\\"line\\"> 群友: 起了怪了 你试一试xxxx</span>\\n<span class=\\"line\\"></span></code></pre>\\n</div>","autoDesc":true}`);export{o as comp,c as data};
